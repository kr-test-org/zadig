// Code generated by swaggo/swag. DO NOT EDIT.

package doc

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "email": "contact@koderover.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/aslan/collaboration/collaborations/sync": {
            "post": {
                "description": "Sync Collaboration Instance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collaboration"
                ],
                "summary": "Sync Collaboration Instance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.SyncCollaborationInstanceArgs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/environment/environments": {
            "put": {
                "description": "Update Multi products",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Update Multi products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "is force",
                        "name": "force",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "updateMultiK8sEnv body",
                        "name": "k8s_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.UpdateEnv"
                            }
                        }
                    },
                    {
                        "description": "updateMultiHelmEnv body",
                        "name": "helm_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.UpdateMultiHelmProductArg"
                        }
                    },
                    {
                        "description": "updateMultiCvmEnv body",
                        "name": "pm_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.UpdateEnv"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "description": "Create Product(environment)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Create Product(environment)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "type",
                        "name": "type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env type",
                        "name": "envType",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "scene",
                        "name": "scene",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "is auto",
                        "name": "auto",
                        "in": "query"
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.CreateSingleProductArg"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/environment/environments/{name}": {
            "delete": {
                "description": "Delete Product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Delete Product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "is delete",
                        "name": "is_delete",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/environment/environments/{name}/analysis": {
            "post": {
                "description": "Run environment Analysis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Run environment Analysis",
                "parameters": [
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.EnvAnalysisRespone"
                        }
                    }
                }
            }
        },
        "/api/aslan/environment/environments/{name}/analysis/cron": {
            "get": {
                "description": "Get Env Analysis Cron",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Get Env Analysis Cron",
                "parameters": [
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.EnvAnalysisCronArg"
                        }
                    }
                }
            },
            "put": {
                "description": "Upsert Env Analysis Cron",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Upsert Env Analysis Cron",
                "parameters": [
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.EnvAnalysisCronArg"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/environment/environments/{name}/configs": {
            "get": {
                "description": "Get environment configs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Get environment configs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.EnvConfigsArgs"
                        }
                    }
                }
            },
            "put": {
                "description": "Update environment configs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Update environment configs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.EnvConfigsArgs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/environment/environments/{name}/globalVariableCandidates": {
            "get": {
                "description": "Get global variable candidates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Get global variable candidates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.ServiceVariableKV"
                            }
                        }
                    }
                }
            }
        },
        "/api/aslan/environment/environments/{name}/k8s/globalVariables": {
            "put": {
                "description": "Update global variables",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Update global variables",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.updateK8sProductGlobalVariablesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/environment/environments/{name}/services": {
            "get": {
                "description": "List services in env",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "List services in env",
                "parameters": [
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.EnvServices"
                        }
                    }
                }
            },
            "put": {
                "description": "Delete services from envrionment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Delete services",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.DeleteProductServicesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/environment/environments/{name}/services/{serviceName}": {
            "get": {
                "description": "Get Production Service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Get Production Service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "service name or release name",
                        "name": "serviceName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "is helm chart deploy",
                        "name": "isHelmChartDeploy",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "workload type",
                        "name": "workLoadType",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.SvcResp"
                        }
                    }
                }
            },
            "put": {
                "description": "Update service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Update service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "service name",
                        "name": "serviceName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.SvcRevision"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/environment/environments/{name}/services/{serviceName}/preview": {
            "post": {
                "description": "Preview service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Preview service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "service name",
                        "name": "serviceName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.PreviewServiceArgs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.SvcDiffResult"
                        }
                    }
                }
            }
        },
        "/api/aslan/environment/environments/{name}/share/portal/{serviceName}": {
            "get": {
                "description": "Get Portal Service for Share Env",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Get Portal Service for Share Env",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "service name",
                        "name": "serviceName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.GetPortalServiceResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Setup Portal Service for Share Env",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Setup Portal Service for Share Env",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "service name",
                        "name": "serviceName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.SetupPortalServiceRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/environment/environments/{name}/sleep": {
            "post": {
                "description": "Environment Sleep",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Environment Sleep",
                "parameters": [
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "enable or disable",
                        "name": "action",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/environment/environments/{name}/sleep/cron": {
            "get": {
                "description": "Get Env Sleep Cron",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Get Env Sleep Cron",
                "parameters": [
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.EnvSleepCronArg"
                        }
                    }
                }
            },
            "put": {
                "description": "Upsert Env Sleep Cron",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Upsert Env Sleep Cron",
                "parameters": [
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.EnvSleepCronArg"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/environment/environments/{name}/version/{serviceName}": {
            "get": {
                "description": "List Environment Service Versions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "List Environment Service Versions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "service name or release name when isHelmChart is true",
                        "name": "serviceName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "is helm chart type",
                        "name": "isHelmChart",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.ListEnvServiceVersionsResponse"
                            }
                        }
                    }
                }
            }
        },
        "/api/aslan/environment/environments/{name}/version/{serviceName}/diff": {
            "get": {
                "description": "Diff Environment Service Versions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Diff Environment Service Versions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "service name or release name when isHelmChart is true",
                        "name": "serviceName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "revision a",
                        "name": "revisionA",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "revision b",
                        "name": "revisionB",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "is helm chart type",
                        "name": "isHelmChart",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "release name",
                        "name": "releaseName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.ListEnvServiceVersionsResponse"
                        }
                    }
                }
            }
        },
        "/api/aslan/environment/environments/{name}/version/{serviceName}/revision/{revision}": {
            "get": {
                "description": "Get Environment Service Version Yaml",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Get Environment Service Version Yaml",
                "parameters": [
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "service name or release name when isHelmChart is true",
                        "name": "serviceName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "revision",
                        "name": "revision",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "is helm chart type",
                        "name": "isHelmChart",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "release name",
                        "name": "releaseName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.GetEnvServiceVersionYamlResponse"
                            }
                        }
                    }
                }
            }
        },
        "/api/aslan/environment/environments/{name}/version/{serviceName}/rollback": {
            "post": {
                "description": "Rollback Environment Service Version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Rollback Environment Service Version",
                "parameters": [
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "service name or release name when isHelmChart is true",
                        "name": "serviceName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "revision",
                        "name": "revision",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "is helm chart type",
                        "name": "isHelmChart",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/environment/init_info/{name}": {
            "get": {
                "description": "Get init product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Get init product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project template name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env type",
                        "name": "envType",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "is base env",
                        "name": "isBaseEnv",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "base env",
                        "name": "baseEnv",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.getInitProductResponse"
                        }
                    }
                }
            }
        },
        "/api/aslan/environment/kube/helm/releaseInstances": {
            "post": {
                "description": "Get Release Instance Deploy Status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Get Release Instance Deploy Status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.HelmDeployStatusCheckRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.GetReleaseInstanceDeployStatusResponse"
                            }
                        }
                    }
                }
            }
        },
        "/api/aslan/environment/kube/k8s/resources": {
            "post": {
                "description": "Get Resource Deploy Status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Get Resource Deploy Status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.K8sDeployStatusCheckRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.ServiceDeployStatus"
                            }
                        }
                    }
                }
            }
        },
        "/api/aslan/environment/kube/pods": {
            "get": {
                "description": "Get Pods Info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Get Pods Info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "projectName",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "envName",
                        "name": "envName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.ListPodsInfoRespone"
                            }
                        }
                    }
                }
            }
        },
        "/api/aslan/environment/kube/pods/{podName}": {
            "get": {
                "description": "Get Pods Detail Info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Get Pods Detail Info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "projectName",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "envName",
                        "name": "envName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "podName",
                        "name": "podName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resource.Pod"
                        }
                    }
                }
            }
        },
        "/api/aslan/environment/production/environments": {
            "put": {
                "description": "Update Multi production products",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Update Multi production products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "is force",
                        "name": "force",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "updateMultiK8sEnv body",
                        "name": "k8s_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.UpdateEnv"
                            }
                        }
                    },
                    {
                        "description": "updateMultiHelmEnv body",
                        "name": "helm_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.UpdateMultiHelmProductArg"
                        }
                    },
                    {
                        "description": "updateMultiHelmChartEnv body",
                        "name": "helm_chart_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.UpdateMultiHelmProductArg"
                        }
                    },
                    {
                        "description": "updateMultiCvmEnv body",
                        "name": "pm_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.UpdateEnv"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/environment/production/environments/:name/helm/releases": {
            "delete": {
                "description": "Delete production helm release from envrionment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Delete production helm release from envrionment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "release names",
                        "name": "releaseNames",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/environment/production/environments/{name}": {
            "get": {
                "description": "Get Product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Get Product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_koderover_zadig_pkg_microservice_aslan_core_environment_service.ProductResp"
                        }
                    }
                }
            }
        },
        "/api/aslan/environment/production/environments/{name}/analysis": {
            "post": {
                "description": "Run Production environment Analysis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Run Production environment Analysis",
                "parameters": [
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.EnvAnalysisRespone"
                        }
                    }
                }
            }
        },
        "/api/aslan/environment/production/environments/{name}/analysis/cron": {
            "get": {
                "description": "Get Production Env Analysis Cron",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Get Production Env Analysis Cron",
                "parameters": [
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.EnvAnalysisCronArg"
                        }
                    }
                }
            },
            "put": {
                "description": "Upsert Production Env Analysis Cron",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Upsert Production Env Analysis Cron",
                "parameters": [
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.EnvAnalysisCronArg"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/environment/production/environments/{name}/check/istioGrayscale/{op}/ready": {
            "get": {
                "description": "Check Istio Grayscale Ready",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Check Istio Grayscale Ready",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "operation",
                        "name": "op",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.IstioGrayscaleReady"
                        }
                    }
                }
            }
        },
        "/api/aslan/environment/production/environments/{name}/check/workloads/k8services": {
            "get": {
                "description": "Check Production Workloads K8sServices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Check Production Workloads K8sServices",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/aslan/environment/production/environments/{name}/configs": {
            "get": {
                "description": "Get production environment configs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Get production environment configs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.EnvConfigsArgs"
                        }
                    }
                }
            },
            "put": {
                "description": "Update production environment configs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Update production environment configs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.EnvConfigsArgs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/environment/production/environments/{name}/estimated-values": {
            "post": {
                "description": "Get Production Estimated Values",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Get Production Estimated Values",
                "parameters": [
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "service name or release name",
                        "name": "serviceName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "is helm chart deploy",
                        "name": "isHelmChartDeploy",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.EstimateValuesArg"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.RawYamlResp"
                        }
                    }
                }
            }
        },
        "/api/aslan/environment/production/environments/{name}/helm/charts": {
            "put": {
                "description": "Update helm product charts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Update helm product charts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.EnvRendersetArg"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/environment/production/environments/{name}/helm/values": {
            "get": {
                "description": "Get Production Chart Values",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Get Production Chart Values",
                "parameters": [
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "service name",
                        "name": "serviceName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "release name",
                        "name": "releaseName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "isHelmChartDeploy",
                        "name": "isHelmChartDeploy",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.SyncCollaborationInstanceArgs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.ValuesResp"
                        }
                    }
                }
            }
        },
        "/api/aslan/environment/production/environments/{name}/istioGrayscale/config": {
            "get": {
                "description": "Get Istio Grayscale Config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Get Istio Grayscale Config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.IstioGrayscale"
                        }
                    }
                }
            },
            "post": {
                "description": "Set Istio Grayscale Config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Set Istio Grayscale Config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.SetIstioGrayscaleConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/environment/production/environments/{name}/istioGrayscale/enable": {
            "post": {
                "description": "Enable Istio Grayscale",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Enable Istio Grayscale",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "description": "Disable Istio Grayscale",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Disable Istio Grayscale",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/environment/production/environments/{name}/istioGrayscale/portal/{serviceName}": {
            "get": {
                "description": "Get Portal Service for Istio Grayscale",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Get Portal Service for Istio Grayscale",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "service name",
                        "name": "serviceName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.GetPortalServiceResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Setup Portal Service for Istio Grayscale",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Setup Portal Service for Istio Grayscale",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "service name",
                        "name": "serviceName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.SetupPortalServiceRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/environment/production/environments/{name}/sleep": {
            "post": {
                "description": "Production Environment Sleep",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Production Environment Sleep",
                "parameters": [
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "enable or disable",
                        "name": "action",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/environment/production/environments/{name}/sleep/cron": {
            "get": {
                "description": "Get Production Env Sleep Cron",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Get Production Env Sleep Cron",
                "parameters": [
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.EnvSleepCronArg"
                        }
                    }
                }
            },
            "put": {
                "description": "Upsert Production Env Sleep Cron",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Upsert Production Env Sleep Cron",
                "parameters": [
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.EnvSleepCronArg"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/environment/production/environments/{name}/version/{serviceName}": {
            "get": {
                "description": "List Production Environment Service Versions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "List Production Environment Service Versions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "service name or release name when isHelmChart is true",
                        "name": "serviceName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "is helm chart type",
                        "name": "isHelmChart",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "release name",
                        "name": "releaseName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.ListEnvServiceVersionsResponse"
                            }
                        }
                    }
                }
            }
        },
        "/api/aslan/environment/production/environments/{name}/version/{serviceName}/diff": {
            "get": {
                "description": "Diff Production Environment Service Versions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Diff Production Environment Service Versions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "service name or release name when isHelmChart is true",
                        "name": "serviceName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "revision a",
                        "name": "revisionA",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "revision b",
                        "name": "revisionB",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "is helm chart type",
                        "name": "isHelmChart",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "release name",
                        "name": "releaseName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.ListEnvServiceVersionsResponse"
                        }
                    }
                }
            }
        },
        "/api/aslan/environment/production/environments/{name}/version/{serviceName}/revision/{revision}": {
            "get": {
                "description": "Get Production Environment Service Version Yaml",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Get Production Environment Service Version Yaml",
                "parameters": [
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "service name or release name when isHelmChart is true",
                        "name": "serviceName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "revision",
                        "name": "revision",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "is helm chart type",
                        "name": "isHelmChart",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "release name",
                        "name": "releaseName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.GetEnvServiceVersionYamlResponse"
                            }
                        }
                    }
                }
            }
        },
        "/api/aslan/environment/production/environments/{name}/version/{serviceName}/rollback": {
            "post": {
                "description": "Rollback Production Environment Service Version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Rollback Production Environment Service Version",
                "parameters": [
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "service name or release name when isHelmChart is true",
                        "name": "serviceName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "revision",
                        "name": "revision",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "is helm chart type",
                        "name": "isHelmChart",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/environment/production/environments/{name}/workloads": {
            "get": {
                "description": "List Workloads In Env",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "List Workloads In Env",
                "parameters": [
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.ServiceResp"
                            }
                        }
                    }
                }
            }
        },
        "/api/aslan/environment/production/rendersets/renderchart": {
            "post": {
                "description": "Get service render charts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Get Service render charts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "envName",
                        "in": "query"
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.GetSvcRenderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.HelmSvcRenderArg"
                            }
                        }
                    }
                }
            }
        },
        "/api/aslan/environment/rendersets/globalVariables": {
            "get": {
                "description": "Get global variable from environment, current only used for k8s project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Get global variable",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "envName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.getGlobalVariablesRespone"
                        }
                    }
                }
            }
        },
        "/api/aslan/environment/rendersets/variables": {
            "get": {
                "description": "Get service variables",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Get service variables",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "envName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "service name",
                        "name": "serviceName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.K8sSvcRenderArg"
                            }
                        }
                    }
                }
            }
        },
        "/api/aslan/environments/{name}/services/{serviceName}/variables": {
            "get": {
                "description": "Get production service variables",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Get production service variables",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "service name",
                        "name": "serviceName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.K8sSvcRenderArg"
                            }
                        }
                    }
                }
            }
        },
        "/api/aslan/placeholder/deploy_job_spec": {
            "post": {
                "description": "[DONT USE] ZadigDeployJobSpec",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "placeholder"
                ],
                "summary": "[DONT USE]  ZadigDeployJobSpec",
                "parameters": [
                    {
                        "description": "body",
                        "name": "deploy_job_spec",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ZadigDeployJobSpec"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/project/bizdir": {
            "get": {
                "description": "Get Bussiness Directory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "Get Bussiness Directory",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.GroupDetail"
                            }
                        }
                    }
                }
            }
        },
        "/api/aslan/project/bizdir/search/project": {
            "get": {
                "description": "Bussiness Directory Search By Project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "Bussiness Directory Search By Project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.GroupDetail"
                            }
                        }
                    }
                }
            }
        },
        "/api/aslan/project/bizdir/search/service": {
            "get": {
                "description": "Bussiness Directory Search By Service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "Bussiness Directory Search By Service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service name",
                        "name": "serviceName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.SearchBizDirByServiceGroup"
                            }
                        }
                    }
                }
            }
        },
        "/api/aslan/project/bizdir/service/detail": {
            "get": {
                "description": "Get Bussiness Directory Searvice Detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "Get Bussiness Directory Searvice Detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "service name",
                        "name": "serviceName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.GetBizDirServiceDetailResponse"
                            }
                        }
                    }
                }
            }
        },
        "/api/aslan/project/bizdir/services": {
            "get": {
                "description": "Get Bussiness Directory Project Services",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "Get Bussiness Directory Project Services",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/aslan/project/integration/{name}/codehosts": {
            "get": {
                "description": "List Project CodeHost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "List Project CodeHost",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "encrypted key",
                        "name": "encryptedKey",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CodeHost"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create Project CodeHost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "Create Project CodeHost",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CodeHost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/project/integration/{name}/codehosts/available": {
            "get": {
                "description": "List Available CodeHost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "List Available CodeHost",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "encrypted key",
                        "name": "encryptedKey",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CodeHost"
                            }
                        }
                    }
                }
            }
        },
        "/api/aslan/project/integration/{name}/codehosts/{id}": {
            "get": {
                "description": "Get Project CodeHost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "Get Project CodeHost",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "code host id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CodeHost"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Project CodeHost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "Delete Project CodeHost",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "code host id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "patch": {
                "description": "Update Project CodeHost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "Update Project CodeHost",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "code host id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CodeHost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/project/products/{name}/globalProductionGlobalVariables": {
            "get": {
                "description": "Get global variable candidates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "Get production_global variable candidates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.GetGlobalVariableCandidatesRespone"
                            }
                        }
                    }
                }
            }
        },
        "/api/aslan/project/products/{name}/globalVariableCandidates": {
            "get": {
                "description": "Get global variable candidates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "Get global variable candidates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.GetGlobalVariableCandidatesRespone"
                            }
                        }
                    }
                }
            }
        },
        "/api/aslan/project/products/{name}/globalVariables": {
            "get": {
                "description": "Get global variables",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "Get global variables",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.ServiceVariableKV"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update global variables",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "Update global variables",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.updateGlobalVariablesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/project/products/{name}/productionGlobalVariables": {
            "get": {
                "description": "Get global variables",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "Get global production_variables",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.ServiceVariableKV"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update global variables",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "Update production_global variables",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.updateGlobalVariablesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/service/production/version/{serviceName}": {
            "get": {
                "description": "List Production Service Versions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service"
                ],
                "summary": "List Production Service Versions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service name",
                        "name": "serviceName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.ListServiceVersionsResponse"
                            }
                        }
                    }
                }
            }
        },
        "/api/aslan/service/production/version/{serviceName}/diff": {
            "get": {
                "description": "Diff Production Service Versions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service"
                ],
                "summary": "Diff Production Service Versions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service name",
                        "name": "serviceName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "revision a",
                        "name": "revisionA",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "revision b",
                        "name": "revisionB",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.ListServiceVersionsResponse"
                        }
                    }
                }
            }
        },
        "/api/aslan/service/production/version/{serviceName}/revision/{revision}": {
            "get": {
                "description": "Get Production Service Versions Yaml",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service"
                ],
                "summary": "Get Production Service Version Yaml",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service name",
                        "name": "serviceName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "revision",
                        "name": "revision",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.GetServiceVersionYamlResponse"
                        }
                    }
                }
            }
        },
        "/api/aslan/service/production/version/{serviceName}/rollback": {
            "post": {
                "description": "Rollback Production SService Version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service"
                ],
                "summary": "Rollback Production Service Version",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service name",
                        "name": "serviceName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "revision",
                        "name": "revision",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/service/services": {
            "post": {
                "description": "Create service template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service"
                ],
                "summary": "Create service template",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "is force to create service template",
                        "name": "force",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.createServiceTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.ServiceOption"
                        }
                    }
                }
            }
        },
        "/api/aslan/service/services/variable/convert": {
            "post": {
                "description": "convert varaible kv and yaml",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service"
                ],
                "summary": "convert varaible kv and yaml",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.ConvertVaraibleKVAndYamlArgs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.ConvertVaraibleKVAndYamlArgs"
                        }
                    }
                }
            }
        },
        "/api/aslan/service/services/{name}/environments/deployable": {
            "get": {
                "description": "Get Deployable Envs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service"
                ],
                "summary": "Get Deployable Envs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.DeployableEnvResp"
                        }
                    }
                }
            }
        },
        "/api/aslan/service/services/{name}/variable": {
            "put": {
                "description": "Update service varaible",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service"
                ],
                "summary": "Update service varaible",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.updateServiceVariableRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/service/template/load": {
            "post": {
                "description": "Load service from yaml template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service"
                ],
                "summary": "Load service from yaml template",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.LoadServiceFromYamlTemplateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/service/template/reload": {
            "post": {
                "description": "Reload service from yaml template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service"
                ],
                "summary": "Reload service from yaml template",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.LoadServiceFromYamlTemplateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/service/version/{serviceName}": {
            "get": {
                "description": "List Service Versions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service"
                ],
                "summary": "List Service Versions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service name",
                        "name": "serviceName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.ListServiceVersionsResponse"
                            }
                        }
                    }
                }
            }
        },
        "/api/aslan/service/version/{serviceName}/diff": {
            "get": {
                "description": "Diff Service Versions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service"
                ],
                "summary": "Diff Service Versions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service name",
                        "name": "serviceName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "revision a",
                        "name": "revisionA",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "revision b",
                        "name": "revisionB",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.ListServiceVersionsResponse"
                        }
                    }
                }
            }
        },
        "/api/aslan/service/version/{serviceName}/revision/{revision}": {
            "get": {
                "description": "Get Service Versions Yaml",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service"
                ],
                "summary": "Get Service Version Yaml",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service name",
                        "name": "serviceName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "revision",
                        "name": "revision",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.GetServiceVersionYamlResponse"
                        }
                    }
                }
            }
        },
        "/api/aslan/service/version/{serviceName}/rollback": {
            "post": {
                "description": "Rollback Service Version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service"
                ],
                "summary": "Rollback Service Version",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service name",
                        "name": "serviceName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "revision",
                        "name": "revision",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/system/dbinstance/project": {
            "get": {
                "description": "List DB Instances Info By Project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "List DB Instances Info By Project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DBInstance"
                            }
                        }
                    }
                }
            }
        },
        "/api/aslan/system/helm/project": {
            "get": {
                "description": "List Helm Repos By Project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "List Helm Repos By Project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.HelmRepo"
                            }
                        }
                    }
                }
            }
        },
        "/api/aslan/system/llm/integration": {
            "get": {
                "description": "List llm integrations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "List llm integrations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.LLMIntegration"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a llm integration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "Create a llm integration",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateLLMIntegrationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/system/llm/integration/check": {
            "get": {
                "description": "Check llm integrations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "Check llm integrations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.checkLLMIntegrationResponse"
                        }
                    }
                }
            }
        },
        "/api/aslan/system/llm/integration/{id}": {
            "get": {
                "description": "Get a llm integration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "Get a llm integration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.LLMIntegration"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a llm integration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "Update a llm integration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateLLMIntegrationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "description": "Delete a llm integration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "Delete a llm integration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/system/meego/{id}/projects": {
            "get": {
                "description": "List Meego Projects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "List Meego Projects",
                "parameters": [
                    {
                        "type": "string",
                        "description": "meego id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.MeegoProjectResp"
                        }
                    }
                }
            }
        },
        "/api/aslan/system/meego/{id}/projects/{projectID}/work_item": {
            "get": {
                "description": "List Meego Work Items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "List Meego Work Items",
                "parameters": [
                    {
                        "type": "string",
                        "description": "meego id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "type key",
                        "name": "type_key",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "page num",
                        "name": "page_num",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "item name",
                        "name": "item_name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.MeegoWorkItemResp"
                        }
                    }
                }
            }
        },
        "/api/aslan/system/meego/{id}/projects/{projectID}/work_item/types": {
            "get": {
                "description": "Get Meego Work Item Type List",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "Get Meego Work Item Type List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "meego id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.MeegoWorkItemTypeResp"
                        }
                    }
                }
            }
        },
        "/api/aslan/system/project_management/project": {
            "get": {
                "description": "List Project Management For Project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "List Project Management For Project",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ProjectManagement"
                            }
                        }
                    }
                }
            }
        },
        "/api/aslan/system/project_management/{id}/jira/project": {
            "get": {
                "description": "List Jira Projects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "List Jira Projects",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jira id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.JiraProjectsResp"
                            }
                        }
                    }
                }
            }
        },
        "/api/aslan/system/registry/project": {
            "get": {
                "description": "List Registries",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "List Registries",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.RegistryNamespace"
                            }
                        }
                    }
                }
            }
        },
        "/api/aslan/system/s3storage/project": {
            "get": {
                "description": "List S3 Storage By Project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "List S3 Storage By Project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.S3Storage"
                            }
                        }
                    }
                }
            }
        },
        "/api/aslan/system/webhook/config": {
            "get": {
                "description": "Get webhook config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "Get webhook config",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.GetWebhookConfigReponse"
                        }
                    }
                }
            }
        },
        "/api/aslan/template/yaml": {
            "post": {
                "description": "Create yaml template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "template"
                ],
                "summary": "Create yaml template",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/template.YamlTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/template/yaml/validateVariable": {
            "post": {
                "description": "Validate template varaibles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service"
                ],
                "summary": "Validate template varaibles",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.getYamlTemplateVariablesReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/template/yaml/{id}": {
            "get": {
                "description": "Get yaml template detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "template"
                ],
                "summary": "Get yaml template detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "template id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/template.YamlDetail"
                        }
                    }
                }
            },
            "put": {
                "description": "Update yaml template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "template"
                ],
                "summary": "Update yaml template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "template id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/template.YamlTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/template/yaml/{id}/variable": {
            "put": {
                "description": "Update yaml template variable",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "template"
                ],
                "summary": "Update yaml template variable",
                "parameters": [
                    {
                        "type": "string",
                        "description": "template id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/template.YamlTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/aslan/workflow/v4/filterEnv": {
            "post": {
                "description": "Get filtered env services",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workflow"
                ],
                "summary": "Get filtered env services",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.filterDeployServiceVarsQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DeployService"
                            }
                        }
                    }
                }
            }
        },
        "/api/aslan/workflow/v4/yamlComparison": {
            "post": {
                "description": "Compare Helm Service Yaml In Env",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workflow"
                ],
                "summary": "Compare Helm Service Yaml In Env",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.getHelmValuesDifferenceReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/workflow.GetHelmValuesDifferenceResp"
                        }
                    }
                }
            }
        },
        "/openapi/projects/project/init/yaml": {
            "post": {
                "description": "OpenAPI Initialize Yaml Project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OpenAPI"
                ],
                "summary": "OpenAPI Initialize Yaml Project",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.OpenAPIInitializeProjectReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "config.CollaborationType": {
            "type": "string",
            "enum": [
                "share",
                "new"
            ],
            "x-enum-varnames": [
                "CollaborationShare",
                "CollaborationNew"
            ]
        },
        "config.CommonEnvCfgType": {
            "type": "string",
            "enum": [
                "Ingress",
                "ConfigMap",
                "Secret",
                "PVC"
            ],
            "x-enum-varnames": [
                "CommonEnvCfgTypeIngress",
                "CommonEnvCfgTypeConfigMap",
                "CommonEnvCfgTypeSecret",
                "CommonEnvCfgTypePvc"
            ]
        },
        "config.DBInstanceType": {
            "type": "string",
            "enum": [
                "mysql",
                "mariadb"
            ],
            "x-enum-varnames": [
                "DBInstanceTypeMySQL",
                "DBInstanceTypeMariaDB"
            ]
        },
        "config.DeployContent": {
            "type": "string",
            "enum": [
                "image",
                "vars",
                "config"
            ],
            "x-enum-varnames": [
                "DeployImage",
                "DeployVars",
                "DeployConfig"
            ]
        },
        "config.DeploySourceType": {
            "type": "string",
            "enum": [
                "runtime",
                "fromjob"
            ],
            "x-enum-varnames": [
                "SourceRuntime",
                "SourceFromJob"
            ]
        },
        "config.JiraAuthType": {
            "type": "string",
            "enum": [
                "password_or_token",
                "personal_access_token"
            ],
            "x-enum-varnames": [
                "JiraBasicAuth",
                "JiraPersonalAccessToken"
            ]
        },
        "github_com_koderover_zadig_pkg_microservice_aslan_core_common_service.EnvService": {
            "type": "object",
            "properties": {
                "deployed": {
                    "type": "boolean"
                },
                "latest_variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.RenderVariableKV"
                    }
                },
                "latest_variable_yaml": {
                    "type": "string"
                },
                "service_modules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Container"
                    }
                },
                "service_name": {
                    "type": "string"
                },
                "updatable": {
                    "type": "boolean"
                },
                "variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.RenderVariableKV"
                    }
                },
                "variable_yaml": {
                    "type": "string"
                }
            }
        },
        "github_com_koderover_zadig_pkg_microservice_aslan_core_environment_service.ProductResp": {
            "type": "object",
            "properties": {
                "cluster_id": {
                    "type": "string"
                },
                "cluster_name": {
                    "type": "string"
                },
                "env_name": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isPublic": {
                    "type": "boolean"
                },
                "is_existed": {
                    "type": "boolean"
                },
                "is_local": {
                    "type": "boolean"
                },
                "is_prod": {
                    "type": "boolean"
                },
                "istio_grayscale_base_env": {
                    "type": "string"
                },
                "istio_grayscale_enable": {
                    "description": "New Since v2.1.0",
                    "type": "boolean"
                },
                "istio_grayscale_is_base": {
                    "type": "boolean"
                },
                "namespace": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "recycle_day": {
                    "type": "integer"
                },
                "registry_id": {
                    "type": "string"
                },
                "related_envs": {
                    "description": "New Since v2.1.0",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.SharedNSEnvs"
                    }
                },
                "render": {
                    "$ref": "#/definitions/models.RenderInfo"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/models.ProductService"
                        }
                    }
                },
                "share_env_base_env": {
                    "type": "string"
                },
                "share_env_enable": {
                    "description": "New Since v1.11.0",
                    "type": "boolean"
                },
                "share_env_is_base": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "update_by": {
                    "type": "string"
                },
                "update_time": {
                    "type": "integer"
                },
                "vars": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/template.RenderKV"
                    }
                }
            }
        },
        "github_com_koderover_zadig_pkg_microservice_aslan_core_service_service.ServiceModule": {
            "type": "object",
            "properties": {
                "build_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "image": {
                    "type": "string"
                },
                "imagePath": {
                    "$ref": "#/definitions/models.ImagePathSpec"
                },
                "image_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "github_com_koderover_zadig_pkg_microservice_aslan_core_service_service.Variable": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "handler.CreateLLMIntegrationRequest": {
            "type": "object",
            "properties": {
                "base_url": {
                    "type": "string"
                },
                "enable_proxy": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "handler.DeleteProductServicesRequest": {
            "type": "object",
            "properties": {
                "service_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "handler.ModuleAndImage": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "handler.checkLLMIntegrationResponse": {
            "type": "object",
            "properties": {
                "check": {
                    "type": "boolean"
                }
            }
        },
        "handler.createServiceTemplateRequest": {
            "type": "object",
            "required": [
                "product_name",
                "service_name",
                "source",
                "type",
                "visibility",
                "yaml"
            ],
            "properties": {
                "product_name": {
                    "type": "string"
                },
                "service_name": {
                    "type": "string"
                },
                "service_variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ServiceVariableKV"
                    }
                },
                "source": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "variable_yaml": {
                    "type": "string"
                },
                "visibility": {
                    "type": "string"
                },
                "yaml": {
                    "type": "string"
                }
            }
        },
        "handler.filterDeployServiceVarsQuery": {
            "type": "object",
            "properties": {
                "env_name": {
                    "type": "string"
                },
                "job_name": {
                    "type": "string"
                },
                "service_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "workflow_name": {
                    "type": "string"
                }
            }
        },
        "handler.getGlobalVariablesRespone": {
            "type": "object",
            "properties": {
                "global_variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.GlobalVariableKV"
                    }
                },
                "revision": {
                    "type": "integer"
                }
            }
        },
        "handler.getHelmValuesDifferenceReq": {
            "type": "object",
            "properties": {
                "env_name": {
                    "type": "string"
                },
                "is_helm_chart_deploy": {
                    "type": "boolean"
                },
                "production": {
                    "type": "boolean"
                },
                "service_modules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.ModuleAndImage"
                    }
                },
                "service_name": {
                    "type": "string"
                },
                "update_service_revision": {
                    "type": "boolean"
                },
                "variable_yaml": {
                    "type": "string"
                }
            }
        },
        "handler.getInitProductResponse": {
            "type": "object",
            "properties": {
                "chart_infos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/template.ServiceRender"
                    }
                },
                "create_time": {
                    "type": "integer"
                },
                "product_name": {
                    "type": "string"
                },
                "render": {
                    "$ref": "#/definitions/models.RenderInfo"
                },
                "revision": {
                    "type": "integer"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/models.ProductService"
                        }
                    }
                },
                "source": {
                    "type": "string"
                },
                "update_by": {
                    "type": "string"
                }
            }
        },
        "handler.getYamlTemplateVariablesReq": {
            "type": "object",
            "required": [
                "content",
                "variable_yaml"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "variable_yaml": {
                    "type": "string"
                }
            }
        },
        "handler.updateGlobalVariablesRequest": {
            "type": "object",
            "properties": {
                "global_variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ServiceVariableKV"
                    }
                }
            }
        },
        "handler.updateK8sProductGlobalVariablesRequest": {
            "type": "object",
            "properties": {
                "current_revision": {
                    "type": "integer"
                },
                "global_variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.GlobalVariableKV"
                    }
                }
            }
        },
        "handler.updateServiceVariableRequest": {
            "type": "object",
            "required": [
                "service_variable_kvs",
                "variable_yaml"
            ],
            "properties": {
                "service_variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ServiceVariableKV"
                    }
                },
                "variable_yaml": {
                    "type": "string"
                }
            }
        },
        "models.AnalysisConfig": {
            "type": "object",
            "properties": {
                "resource_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ResourceType"
                    }
                }
            }
        },
        "models.CodeHost": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "alias": {
                    "type": "string"
                },
                "application_id": {
                    "type": "string"
                },
                "auth_type": {
                    "$ref": "#/definitions/types.AuthType"
                },
                "client_secret": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "integer"
                },
                "enable_proxy": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "integration_level": {
                    "$ref": "#/definitions/setting.IntegrationLevel"
                },
                "is_ready": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "private_access_token": {
                    "type": "string"
                },
                "project": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "ssh_key": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.Commit": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "sha": {
                    "type": "string"
                }
            }
        },
        "models.Container": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                },
                "imagePath": {
                    "$ref": "#/definitions/models.ImagePathSpec"
                },
                "image_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.CreateUpdateCommonEnvCfgArgs": {
            "type": "object",
            "properties": {
                "auto_sync": {
                    "type": "boolean"
                },
                "common_env_cfg_type": {
                    "$ref": "#/definitions/config.CommonEnvCfgType"
                },
                "env_name": {
                    "type": "string"
                },
                "git_repo_config": {
                    "$ref": "#/definitions/template.GitRepoConfig"
                },
                "name": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "restart_associated_svc": {
                    "type": "boolean"
                },
                "service_name": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "yaml_data": {
                    "type": "string"
                }
            }
        },
        "models.DBInstance": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "projects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "$ref": "#/definitions/config.DBInstanceType"
                },
                "update_by": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.DeplopyVariableConfig": {
            "type": "object",
            "properties": {
                "use_global_variable": {
                    "type": "boolean"
                },
                "variable_key": {
                    "type": "string"
                }
            }
        },
        "models.DeployService": {
            "type": "object",
            "properties": {
                "key_vals": {
                    "description": "KeyVals Deprecated since 1.18",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ServiceKeyVal"
                    }
                },
                "latest_key_vals": {
                    "description": "LatestKeyVals Deprecated since 1.18",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ServiceKeyVal"
                    }
                },
                "latest_variable_kvs": {
                    "description": "LatestVariableKVs added since 1.18",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.RenderVariableKV"
                    }
                },
                "service_name": {
                    "type": "string"
                },
                "updatable": {
                    "type": "boolean"
                },
                "update_config": {
                    "type": "boolean"
                },
                "variable_configs": {
                    "description": "VariableConfigs added since 1.18",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DeplopyVariableConfig"
                    }
                },
                "variable_kvs": {
                    "description": "VariableKVs added since 1.18",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.RenderVariableKV"
                    }
                },
                "variable_yaml": {
                    "description": "VariableYaml added since 1.18, used for helm production environments",
                    "type": "string"
                }
            }
        },
        "models.EnvConfig": {
            "type": "object",
            "properties": {
                "env_name": {
                    "type": "string"
                },
                "host_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.EnvStatus": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "env_name": {
                    "type": "string"
                },
                "host_id": {
                    "type": "string"
                },
                "pm_info": {
                    "$ref": "#/definitions/models.PmInfo"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.GUIConfig": {
            "type": "object",
            "properties": {
                "deployment": {},
                "ingress": {},
                "service": {}
            }
        },
        "models.HelmChart": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "repo": {
                    "type": "string"
                },
                "values_yaml": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "models.HelmRepo": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "projects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "repo_name": {
                    "type": "string"
                },
                "update_by": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.ImagePathSpec": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "repo": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                }
            }
        },
        "models.IstioGrayscale": {
            "type": "object",
            "properties": {
                "base_env": {
                    "type": "string"
                },
                "enable": {
                    "type": "boolean"
                },
                "grayscale_strategy": {
                    "type": "string"
                },
                "header_match_configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.IstioHeaderMatchConfig"
                    }
                },
                "is_base": {
                    "type": "boolean"
                },
                "weight_configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.IstioWeightConfig"
                    }
                }
            }
        },
        "models.IstioHeaderMatch": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "match": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "models.IstioHeaderMatchConfig": {
            "type": "object",
            "properties": {
                "env": {
                    "type": "string"
                },
                "header_match": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.IstioHeaderMatch"
                    }
                }
            }
        },
        "models.IstioWeightConfig": {
            "type": "object",
            "properties": {
                "env": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "models.LLMIntegration": {
            "type": "object",
            "properties": {
                "base_url": {
                    "type": "string"
                },
                "enable_proxy": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "update_time": {
                    "type": "integer"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "models.NotificationConfig": {
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NotificationEvent"
                    }
                },
                "webhook_type": {
                    "$ref": "#/definitions/models.WebHookType"
                },
                "webhook_url": {
                    "type": "string"
                }
            }
        },
        "models.NotificationEvent": {
            "type": "string",
            "enum": [
                "notification_event_analyzer_normal",
                "notification_event_analyzer_abnormal"
            ],
            "x-enum-varnames": [
                "NotificationEventAnalyzerNoraml",
                "NotificationEventAnalyzerAbnormal"
            ]
        },
        "models.ParameterSettingType": {
            "type": "string",
            "enum": [
                "string",
                "choice",
                "external"
            ],
            "x-enum-varnames": [
                "StringType",
                "ChoiceType",
                "ExternalType"
            ]
        },
        "models.PmHealthCheck": {
            "type": "object",
            "properties": {
                "current_healthy_num": {
                    "type": "integer"
                },
                "current_unhealthy_num": {
                    "type": "integer"
                },
                "healthy_threshold": {
                    "type": "integer"
                },
                "interval": {
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "time_out": {
                    "type": "integer"
                },
                "unhealthy_threshold": {
                    "type": "integer"
                }
            }
        },
        "models.PmInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "is_prod": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "provider": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/setting.PMHostStatus"
                }
            }
        },
        "models.ProductService": {
            "type": "object",
            "properties": {
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Container"
                    }
                },
                "deploy_strategy": {
                    "type": "string"
                },
                "env_configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EnvConfig"
                    }
                },
                "error": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "release_name": {
                    "type": "string"
                },
                "render": {
                    "description": "New since 1.9.0 used to replace service renders in render_set",
                    "allOf": [
                        {
                            "$ref": "#/definitions/template.ServiceRender"
                        }
                    ]
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ServiceResource"
                    }
                },
                "revision": {
                    "type": "integer"
                },
                "service_name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatable": {
                    "type": "boolean"
                },
                "update_time": {
                    "type": "integer"
                },
                "variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.RenderVariableKV"
                    }
                },
                "variable_yaml": {
                    "type": "string"
                }
            }
        },
        "models.ProductShareEnv": {
            "type": "object",
            "properties": {
                "base_env": {
                    "type": "string"
                },
                "enable": {
                    "type": "boolean"
                },
                "is_base": {
                    "type": "boolean"
                }
            }
        },
        "models.ProjectDetail": {
            "type": "object",
            "properties": {
                "project_deploy_type": {
                    "type": "string"
                },
                "project_key": {
                    "type": "string"
                },
                "project_name": {
                    "type": "string"
                }
            }
        },
        "models.ProjectManagement": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "jira_auth_type": {
                    "$ref": "#/definitions/config.JiraAuthType"
                },
                "jira_host": {
                    "type": "string"
                },
                "jira_personal_access_token": {
                    "description": "JiraPersonalAccessToken is used for bearer token",
                    "type": "string"
                },
                "jira_token": {
                    "description": "JiraToken is used in place of password for basic auth with username",
                    "type": "string"
                },
                "jira_user": {
                    "type": "string"
                },
                "meego_host": {
                    "type": "string"
                },
                "meego_plugin_id": {
                    "type": "string"
                },
                "meego_plugin_secret": {
                    "type": "string"
                },
                "meego_user_key": {
                    "type": "string"
                },
                "system_identity": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "models.RegistryAdvancedSetting": {
            "type": "object",
            "properties": {
                "enable_tls": {
                    "description": "New field since v1.11 to support self-signed TLS certificate",
                    "type": "boolean"
                },
                "modified": {
                    "description": "indicator to make sure if the advanced has been modified\nThis is solely a field for frontend display and not used anywhere else in the backend system\nTODO: whether this field should exist needs a discussion",
                    "type": "boolean"
                },
                "tls_cert": {
                    "type": "string"
                }
            }
        },
        "models.RegistryNamespace": {
            "type": "object",
            "properties": {
                "access_key": {
                    "type": "string"
                },
                "advanced_setting": {
                    "$ref": "#/definitions/models.RegistryAdvancedSetting"
                },
                "id": {
                    "type": "string"
                },
                "is_default": {
                    "type": "boolean"
                },
                "namespace": {
                    "description": "Namespace is NOT a required field, this could be empty when the registry is AWS ECR or so.\nuse with CAUTION !!!!",
                    "type": "string"
                },
                "projects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "reg_addr": {
                    "type": "string"
                },
                "reg_provider": {
                    "type": "string"
                },
                "reg_type": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "secret_key": {
                    "type": "string"
                },
                "update_by": {
                    "type": "string"
                },
                "update_time": {
                    "type": "integer"
                }
            }
        },
        "models.RenderInfo": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "product_tmpl": {
                    "type": "string"
                },
                "revision": {
                    "type": "integer"
                }
            }
        },
        "models.ResourceType": {
            "type": "string",
            "enum": [
                "Pod",
                "Deployment",
                "ReplicaSet",
                "PersistentVolumeClaim",
                "Service",
                "Ingress",
                "StatefulSet",
                "CronJob",
                "HorizontalPodAutoScaler",
                "PodDisruptionBudget",
                "NetworkPolicy"
            ],
            "x-enum-varnames": [
                "ResourceTypePod",
                "ResourceTypeDeployment",
                "ResourceTypeReplicaSet",
                "ResourceTypePVC",
                "ResourceTypeService",
                "ResourceTypeIngress",
                "ResourceTypeStatefulSet",
                "ResourceTypeCronJob",
                "ResourceTypeHPA",
                "ResourceTypePDB",
                "ResourceTypeNetworkPolicy"
            ]
        },
        "models.S3Storage": {
            "type": "object",
            "properties": {
                "ak": {
                    "type": "string"
                },
                "bucket": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "insecure": {
                    "type": "boolean"
                },
                "is_default": {
                    "type": "boolean"
                },
                "projects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "provider": {
                    "type": "integer"
                },
                "region": {
                    "type": "string"
                },
                "sk": {
                    "type": "string"
                },
                "subfolder": {
                    "type": "string"
                },
                "update_time": {
                    "type": "integer"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "models.Service": {
            "type": "object",
            "properties": {
                "auto_sync": {
                    "type": "boolean"
                },
                "branch_name": {
                    "type": "string"
                },
                "build_name": {
                    "type": "string"
                },
                "codehost_id": {
                    "type": "integer"
                },
                "commit": {
                    "$ref": "#/definitions/models.Commit"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Container"
                    }
                },
                "create_by": {
                    "type": "string"
                },
                "create_from": {},
                "create_time": {
                    "type": "integer"
                },
                "deploy_time": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "env_configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EnvConfig"
                    }
                },
                "env_name": {
                    "type": "string"
                },
                "env_statuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EnvStatus"
                    }
                },
                "gerrit_branch_name": {
                    "type": "string"
                },
                "gerrit_codeHost_id": {
                    "type": "integer"
                },
                "gerrit_path": {
                    "type": "string"
                },
                "gerrit_remote_name": {
                    "type": "string"
                },
                "gerrit_repo_name": {
                    "type": "string"
                },
                "gitee_path": {
                    "type": "string"
                },
                "gui_config": {
                    "$ref": "#/definitions/models.GUIConfig"
                },
                "hash256": {
                    "type": "string"
                },
                "health_checks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PmHealthCheck"
                    }
                },
                "helm_chart": {
                    "$ref": "#/definitions/models.HelmChart"
                },
                "is_dir": {
                    "type": "boolean"
                },
                "load_path": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "release_naming": {
                    "type": "string"
                },
                "repo_name": {
                    "type": "string"
                },
                "repo_namespace": {
                    "type": "string"
                },
                "repo_owner": {
                    "type": "string"
                },
                "repo_uuid": {
                    "type": "string"
                },
                "revision": {
                    "type": "integer"
                },
                "service_name": {
                    "type": "string"
                },
                "service_variable_kvs": {
                    "description": "New since 1.18.0, stores the variable kvs of k8s services",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ServiceVariableKV"
                    }
                },
                "service_vars": {
                    "description": "DEPRECATED, New since 1.16.0, stores keys in variables which can be set in env",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "source": {
                    "type": "string"
                },
                "src_path": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "team": {
                    "type": "string"
                },
                "template_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "variable_yaml": {
                    "description": "New since 1.16.0, stores the variable yaml of k8s services",
                    "type": "string"
                },
                "visibility": {
                    "description": "DEPRECATED since 1.17.0",
                    "type": "string"
                },
                "workload_type": {
                    "description": "WorkloadType is set in host projects",
                    "type": "string"
                },
                "yaml": {
                    "type": "string"
                }
            }
        },
        "models.ServiceAndImage": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                },
                "image_name": {
                    "type": "string"
                },
                "service_module": {
                    "type": "string"
                },
                "service_name": {
                    "type": "string"
                }
            }
        },
        "models.ServiceKeyVal": {
            "type": "object",
            "properties": {
                "choice_option": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "is_credential": {
                    "type": "boolean"
                },
                "key": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/models.ParameterSettingType"
                },
                "value": {}
            }
        },
        "models.ServiceResource": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "models.WebHookType": {
            "type": "string",
            "enum": [
                "feishu",
                "dingding",
                "wechat"
            ],
            "x-enum-varnames": [
                "WebHookTypeFeishu",
                "WebHookTypeDingding",
                "WebHookTypeWeChat"
            ]
        },
        "models.ZadigDeployJobSpec": {
            "type": "object",
            "properties": {
                "deploy_contents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.DeployContent"
                    }
                },
                "deploy_type": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "job_name": {
                    "description": "当 source 为 fromjob 时需要，指定部署镜像来源是上游哪一个构建任务",
                    "type": "string"
                },
                "origin_job_name": {
                    "description": "save the origin quoted job name",
                    "type": "string"
                },
                "production": {
                    "type": "boolean"
                },
                "service_and_images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ServiceAndImage"
                    }
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DeployService"
                    }
                },
                "skip_check_run_status": {
                    "type": "boolean"
                },
                "source": {
                    "description": "fromjob/runtime, runtime 表示运行时输入，fromjob 表示从上游构建任务中获取",
                    "allOf": [
                        {
                            "$ref": "#/definitions/config.DeploySourceType"
                        }
                    ]
                }
            }
        },
        "resource.Backend": {
            "type": "object",
            "properties": {
                "service_name": {
                    "type": "string"
                },
                "service_port": {
                    "type": "string"
                }
            }
        },
        "resource.Container": {
            "type": "object",
            "properties": {
                "finished_at": {
                    "description": "Time at which the container last terminated",
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "message": {
                    "description": "Message regarding the last termination of the container",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/resource.ContainerPort"
                    }
                },
                "ready": {
                    "type": "boolean"
                },
                "reason": {
                    "description": "reason from the last termination of the container",
                    "type": "string"
                },
                "restart_count": {
                    "type": "integer"
                },
                "started_at": {
                    "description": "Time at which previous execution of the container started",
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "resource.ContainerImage": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                },
                "image_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "resource.ContainerPort": {
            "type": "object",
            "properties": {
                "containerPort": {
                    "description": "Number of port to expose on the pod's IP address.\nThis must be a valid port number, 0 \u003c x \u003c 65536.",
                    "type": "integer"
                },
                "hostIP": {
                    "description": "What host IP to bind the external port to.\n+optional",
                    "type": "string"
                },
                "hostPort": {
                    "description": "Number of port to expose on the host.\nIf specified, this must be a valid port number, 0 \u003c x \u003c 65536.\nIf HostNetwork is specified, this must match ContainerPort.\nMost containers do not need this.\n+optional",
                    "type": "integer"
                },
                "name": {
                    "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each\nnamed port in a pod must have a unique name. Name for the port that can be\nreferred to by services.\n+optional",
                    "type": "string"
                },
                "protocol": {
                    "description": "Protocol for port. Must be UDP, TCP, or SCTP.\nDefaults to \"TCP\".\n+optional\n+default=\"TCP\"",
                    "allOf": [
                        {
                            "$ref": "#/definitions/resource.Protocol"
                        }
                    ]
                }
            }
        },
        "resource.CronJob": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "integer"
                },
                "create_time": {
                    "type": "integer"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/resource.ContainerImage"
                    }
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "last_schedule": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/resource.Pod"
                    }
                },
                "schedule": {
                    "type": "string"
                },
                "suspend": {
                    "type": "boolean"
                }
            }
        },
        "resource.HostInfo": {
            "type": "object",
            "properties": {
                "backend": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/resource.Backend"
                    }
                },
                "host": {
                    "type": "string"
                }
            }
        },
        "resource.Ingress": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "string"
                },
                "host_info": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/resource.HostInfo"
                    }
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "resource.Pod": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/resource.Container"
                    }
                },
                "containers_message": {
                    "type": "string"
                },
                "containers_ready": {
                    "type": "boolean"
                },
                "createtime": {
                    "type": "integer"
                },
                "enable_debug_container": {
                    "type": "boolean"
                },
                "host_ip": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "node_name": {
                    "type": "string"
                },
                "pod_ready": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "resource.Protocol": {
            "type": "string",
            "enum": [
                "TCP",
                "UDP",
                "SCTP"
            ],
            "x-enum-varnames": [
                "ProtocolTCP",
                "ProtocolUDP",
                "ProtocolSCTP"
            ]
        },
        "resource.Service": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/resource.ServicePort"
                    }
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "resource.ServicePort": {
            "type": "object",
            "properties": {
                "node_port": {
                    "type": "integer"
                },
                "service_name": {
                    "type": "string"
                },
                "service_port": {
                    "type": "integer"
                }
            }
        },
        "resource.Workload": {
            "type": "object",
            "properties": {
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/resource.ContainerImage"
                    }
                },
                "name": {
                    "type": "string"
                },
                "pods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/resource.Pod"
                    }
                },
                "replicas": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "zadigx_release_tag": {
                    "type": "string"
                },
                "zadigx_release_type": {
                    "description": "ZadigXReleaseType represent the release type of workload created by zadigx when it is not empty\nfrontend should limit or allow some operations on these workloads",
                    "type": "string"
                }
            }
        },
        "service.ConvertVaraibleKVAndYamlActionType": {
            "type": "string",
            "enum": [
                "toKV",
                "toYaml"
            ],
            "x-enum-varnames": [
                "ConvertVaraibleKVAndYamlActionTypeToKV",
                "ConvertVaraibleKVAndYamlActionTypeToYaml"
            ]
        },
        "service.ConvertVaraibleKVAndYamlArgs": {
            "type": "object",
            "required": [
                "action",
                "kvs"
            ],
            "properties": {
                "action": {
                    "$ref": "#/definitions/service.ConvertVaraibleKVAndYamlActionType"
                },
                "kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ServiceVariableKV"
                    }
                },
                "yaml": {
                    "type": "string"
                }
            }
        },
        "service.CreateSingleProductArg": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "base_env_name": {
                    "type": "string"
                },
                "base_name": {
                    "description": "for collaboration mode",
                    "type": "string"
                },
                "chartValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.ProductHelmServiceCreationInfo"
                    }
                },
                "cluster_id": {
                    "type": "string"
                },
                "defaultValues": {
                    "description": "TODO fix me",
                    "type": "string"
                },
                "default_values": {
                    "type": "string"
                },
                "env_configs": {
                    "description": "New Since v1.13.0",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CreateUpdateCommonEnvCfgArgs"
                    }
                },
                "env_name": {
                    "type": "string"
                },
                "global_variables": {
                    "description": "for k8s products",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.GlobalVariableKV"
                    }
                },
                "is_existed": {
                    "type": "boolean"
                },
                "istio_grayscale": {
                    "description": "New Since v2.1.0",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.IstioGrayscale"
                        }
                    ]
                },
                "namespace": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "production": {
                    "type": "boolean"
                },
                "registry_id": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/service.ProductK8sServiceCreationInfo"
                        }
                    }
                },
                "share_env": {
                    "description": "New Since v1.12.0",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.ProductShareEnv"
                        }
                    ]
                },
                "valuesData": {
                    "description": "for helm products",
                    "allOf": [
                        {
                            "$ref": "#/definitions/service.ValuesDataArgs"
                        }
                    ]
                }
            }
        },
        "service.DeployStatus": {
            "type": "string",
            "enum": [
                "deployed",
                "undeployed"
            ],
            "x-enum-varnames": [
                "StatusDeployed",
                "StatusUnDeployed"
            ]
        },
        "service.DeployableEnv": {
            "type": "object",
            "properties": {
                "cluster_id": {
                    "type": "string"
                },
                "env_name": {
                    "type": "string"
                },
                "global_variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.GlobalVariableKV"
                    }
                },
                "namespace": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ServiceWithVariable"
                    }
                }
            }
        },
        "service.DeployableEnvResp": {
            "type": "object",
            "properties": {
                "envs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.DeployableEnv"
                    }
                }
            }
        },
        "service.EnvAnalysisCronArg": {
            "type": "object",
            "properties": {
                "cron": {
                    "type": "string"
                },
                "enable": {
                    "type": "boolean"
                }
            }
        },
        "service.EnvAnalysisRespone": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "string"
                }
            }
        },
        "service.EnvConfigsArgs": {
            "type": "object",
            "properties": {
                "analysis_config": {
                    "$ref": "#/definitions/models.AnalysisConfig"
                },
                "notification_configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NotificationConfig"
                    }
                }
            }
        },
        "service.EnvDefinition": {
            "type": "object",
            "properties": {
                "cluster_name": {
                    "type": "string"
                },
                "env_key": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                }
            }
        },
        "service.EnvRendersetArg": {
            "type": "object",
            "properties": {
                "chartValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.HelmSvcRenderArg"
                    }
                },
                "defaultValues": {
                    "type": "string"
                },
                "deployType": {
                    "type": "string"
                },
                "updateServiceTmpl": {
                    "type": "boolean"
                },
                "valuesData": {
                    "$ref": "#/definitions/service.ValuesDataArgs"
                }
            }
        },
        "service.EnvServices": {
            "type": "object",
            "properties": {
                "env_name": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_koderover_zadig_pkg_microservice_aslan_core_common_service.EnvService"
                    }
                }
            }
        },
        "service.EnvSleepCronArg": {
            "type": "object",
            "properties": {
                "awake_cron": {
                    "type": "string"
                },
                "awake_cron_enable": {
                    "type": "boolean"
                },
                "sleep_cron": {
                    "type": "string"
                },
                "sleep_cron_enable": {
                    "type": "boolean"
                }
            }
        },
        "service.EstimateValuesArg": {
            "type": "object",
            "properties": {
                "chartName": {
                    "type": "string"
                },
                "chartRepo": {
                    "type": "string"
                },
                "chartVersion": {
                    "type": "string"
                },
                "defaultValues": {
                    "type": "string"
                },
                "overrideValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.KVPair"
                    }
                },
                "overrideYaml": {
                    "type": "string"
                }
            }
        },
        "service.GetBizDirServiceDetailResponse": {
            "type": "object",
            "properties": {
                "chart_version": {
                    "type": "string"
                },
                "env_name": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "production": {
                    "type": "boolean"
                },
                "project_name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "update_time": {
                    "type": "integer"
                }
            }
        },
        "service.GetEnvServiceVersionYamlResponse": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "variable_yaml": {
                    "type": "string"
                },
                "yaml": {
                    "type": "string"
                }
            }
        },
        "service.GetGlobalVariableCandidatesRespone": {
            "type": "object",
            "properties": {
                "key_name": {
                    "type": "string"
                },
                "related_service": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "service.GetPortalServiceResponse": {
            "type": "object",
            "properties": {
                "default_gateway_address": {
                    "type": "string"
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.SetupPortalServiceRequest"
                    }
                }
            }
        },
        "service.GetReleaseInstanceDeployStatusResponse": {
            "type": "object",
            "properties": {
                "chart_name": {
                    "type": "string"
                },
                "chart_version": {
                    "type": "string"
                },
                "release_name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "values": {
                    "type": "string"
                }
            }
        },
        "service.GetServiceVersionYamlResponse": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "variable_yaml": {
                    "type": "string"
                },
                "yaml": {
                    "type": "string"
                }
            }
        },
        "service.GetSvcRenderArg": {
            "type": "object",
            "properties": {
                "is_helm_chart_deploy": {
                    "type": "boolean"
                },
                "service_or_release_name": {
                    "type": "string"
                }
            }
        },
        "service.GetSvcRenderRequest": {
            "type": "object",
            "properties": {
                "get_svc_render_args": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.GetSvcRenderArg"
                    }
                }
            }
        },
        "service.GetWebhookConfigReponse": {
            "type": "object",
            "properties": {
                "secret": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "service.GroupDetail": {
            "type": "object",
            "properties": {
                "group_name": {
                    "type": "string"
                },
                "projects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProjectDetail"
                    }
                }
            }
        },
        "service.HelmDeployStatusCheckRequest": {
            "type": "object",
            "properties": {
                "cluster_id": {
                    "type": "string"
                },
                "env_name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "service.HelmSvcRenderArg": {
            "type": "object",
            "properties": {
                "chartVersion": {
                    "type": "string"
                },
                "chart_name": {
                    "type": "string"
                },
                "chart_repo": {
                    "type": "string"
                },
                "deploy_strategy": {
                    "description": "New since 1.16.0, used to determine if the service will be installed",
                    "type": "string"
                },
                "envName": {
                    "type": "string"
                },
                "is_chart_deploy": {
                    "type": "boolean"
                },
                "overrideValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.KVPair"
                    }
                },
                "overrideYaml": {
                    "type": "string"
                },
                "release_name": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "valuesData": {
                    "$ref": "#/definitions/service.ValuesDataArgs"
                },
                "variable_yaml": {
                    "type": "string"
                },
                "yaml_data": {
                    "$ref": "#/definitions/template.CustomYaml"
                }
            }
        },
        "service.IngressInfo": {
            "type": "object",
            "properties": {
                "host_info": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/resource.HostInfo"
                    }
                }
            }
        },
        "service.IstioGatewayInfo": {
            "type": "object",
            "properties": {
                "servers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.IstioGatewayServer"
                    }
                }
            }
        },
        "service.IstioGatewayServer": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string"
                },
                "port_number": {
                    "type": "integer"
                },
                "port_protocol": {
                    "type": "string"
                }
            }
        },
        "service.IstioGrayscaleChecks": {
            "type": "object",
            "properties": {
                "namespace_has_istio_label": {
                    "type": "boolean"
                },
                "pods_have_istio_proxy": {
                    "type": "boolean"
                },
                "workloads_have_k8s_service": {
                    "type": "boolean"
                },
                "workloads_ready": {
                    "type": "boolean"
                }
            }
        },
        "service.IstioGrayscaleReady": {
            "type": "object",
            "properties": {
                "checks": {
                    "$ref": "#/definitions/service.IstioGrayscaleChecks"
                },
                "is_ready": {
                    "type": "boolean"
                }
            }
        },
        "service.JiraProjectsResp": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "service.K8sDeployStatusCheckRequest": {
            "type": "object",
            "properties": {
                "cluster_id": {
                    "type": "string"
                },
                "env_name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.K8sSvcRenderArg"
                    }
                }
            }
        },
        "service.K8sSvcRenderArg": {
            "type": "object",
            "properties": {
                "deploy_strategy": {
                    "description": "New since 1.16.0, used to determine if the service will be installed",
                    "type": "string"
                },
                "env_name": {
                    "type": "string"
                },
                "latest_variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.RenderVariableKV"
                    }
                },
                "latest_variable_yaml": {
                    "type": "string"
                },
                "service_name": {
                    "type": "string"
                },
                "variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.RenderVariableKV"
                    }
                },
                "variable_yaml": {
                    "type": "string"
                }
            }
        },
        "service.KVPair": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {}
            }
        },
        "service.ListEnvServiceVersionsResponse": {
            "type": "object",
            "properties": {
                "create_by": {
                    "type": "string"
                },
                "create_time": {
                    "type": "integer"
                },
                "revision": {
                    "type": "integer"
                },
                "service_name": {
                    "type": "string"
                }
            }
        },
        "service.ListPodsInfoRespone": {
            "type": "object",
            "properties": {
                "create_time": {
                    "type": "integer"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "ready": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "service.ListServiceVersionsResponse": {
            "type": "object",
            "properties": {
                "create_by": {
                    "type": "string"
                },
                "create_time": {
                    "type": "integer"
                },
                "revision": {
                    "type": "integer"
                },
                "service_name": {
                    "type": "string"
                }
            }
        },
        "service.LoadServiceFromYamlTemplateReq": {
            "type": "object",
            "properties": {
                "auto_sync": {
                    "type": "boolean"
                },
                "project_name": {
                    "type": "string"
                },
                "service_name": {
                    "type": "string"
                },
                "service_variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ServiceVariableKV"
                    }
                },
                "template_id": {
                    "type": "string"
                },
                "variable_yaml": {
                    "type": "string"
                }
            }
        },
        "service.MeegoProject": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "service.MeegoProjectResp": {
            "type": "object",
            "properties": {
                "projects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.MeegoProject"
                    }
                }
            }
        },
        "service.MeegoWorkItem": {
            "type": "object",
            "properties": {
                "current_state": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "service.MeegoWorkItemResp": {
            "type": "object",
            "properties": {
                "work_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.MeegoWorkItem"
                    }
                }
            }
        },
        "service.MeegoWorkItemType": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type_key": {
                    "type": "string"
                }
            }
        },
        "service.MeegoWorkItemTypeResp": {
            "type": "object",
            "properties": {
                "work_item_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.MeegoWorkItemType"
                    }
                }
            }
        },
        "service.OpenAPIInitializeProjectReq": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "env_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.EnvDefinition"
                    }
                },
                "is_public": {
                    "type": "boolean"
                },
                "project_key": {
                    "type": "string"
                },
                "project_name": {
                    "type": "string"
                },
                "service_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.ServiceDefinition"
                    }
                }
            }
        },
        "service.PreviewServiceArgs": {
            "type": "object",
            "properties": {
                "env_name": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "service_modules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Container"
                    }
                },
                "service_name": {
                    "type": "string"
                },
                "update_service_revision": {
                    "type": "boolean"
                },
                "variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.RenderVariableKV"
                    }
                }
            }
        },
        "service.Product": {
            "type": "object",
            "properties": {
                "base_name": {
                    "type": "string"
                },
                "chartValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.HelmSvcRenderArg"
                    }
                },
                "collaboration_mode": {
                    "type": "string"
                },
                "collaboration_type": {
                    "$ref": "#/definitions/config.CollaborationType"
                },
                "default_values": {
                    "type": "string"
                },
                "deploy_type": {
                    "type": "string"
                },
                "global_variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.GlobalVariableKV"
                    }
                },
                "name": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.K8sSvcRenderArg"
                    }
                },
                "valuesData": {
                    "$ref": "#/definitions/service.ValuesDataArgs"
                },
                "yaml_data": {
                    "$ref": "#/definitions/template.CustomYaml"
                }
            }
        },
        "service.ProductHelmServiceCreationInfo": {
            "type": "object",
            "properties": {
                "chartVersion": {
                    "type": "string"
                },
                "chart_name": {
                    "type": "string"
                },
                "chart_repo": {
                    "type": "string"
                },
                "deploy_strategy": {
                    "type": "string"
                },
                "envName": {
                    "type": "string"
                },
                "is_chart_deploy": {
                    "type": "boolean"
                },
                "overrideValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.KVPair"
                    }
                },
                "overrideYaml": {
                    "type": "string"
                },
                "release_name": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "valuesData": {
                    "$ref": "#/definitions/service.ValuesDataArgs"
                },
                "variable_yaml": {
                    "type": "string"
                },
                "yaml_data": {
                    "$ref": "#/definitions/template.CustomYaml"
                }
            }
        },
        "service.ProductK8sServiceCreationInfo": {
            "type": "object",
            "properties": {
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Container"
                    }
                },
                "deploy_strategy": {
                    "type": "string"
                },
                "env_configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EnvConfig"
                    }
                },
                "error": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "release_name": {
                    "type": "string"
                },
                "render": {
                    "description": "New since 1.9.0 used to replace service renders in render_set",
                    "allOf": [
                        {
                            "$ref": "#/definitions/template.ServiceRender"
                        }
                    ]
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ServiceResource"
                    }
                },
                "revision": {
                    "type": "integer"
                },
                "service_name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatable": {
                    "type": "boolean"
                },
                "update_time": {
                    "type": "integer"
                },
                "variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.RenderVariableKV"
                    }
                },
                "variable_yaml": {
                    "type": "string"
                }
            }
        },
        "service.RawYamlResp": {
            "type": "object",
            "properties": {
                "yamlContent": {
                    "type": "string"
                }
            }
        },
        "service.RepoConfig": {
            "type": "object",
            "properties": {
                "branch": {
                    "type": "string"
                },
                "codehostID": {
                    "type": "integer"
                },
                "namespace": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "repo": {
                    "type": "string"
                },
                "valuesPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "service.ResourceDeployStatus": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "override_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.KVPair"
                    }
                },
                "override_yaml": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/service.DeployStatus"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "service.SearchBizDirByServiceGroup": {
            "type": "object",
            "properties": {
                "group_name": {
                    "type": "string"
                },
                "projects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.SearchBizDirByServiceProject"
                    }
                }
            }
        },
        "service.SearchBizDirByServiceProject": {
            "type": "object",
            "properties": {
                "project": {
                    "$ref": "#/definitions/models.ProjectDetail"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "service.ServiceDefinition": {
            "type": "object",
            "properties": {
                "auto_sync": {
                    "type": "boolean"
                },
                "service_name": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "template_name": {
                    "type": "string"
                },
                "values_yaml": {
                    "type": "string"
                },
                "variable_yaml": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/util.KeyValue"
                    }
                },
                "yaml": {
                    "type": "string"
                }
            }
        },
        "service.ServiceDeployStatus": {
            "type": "object",
            "properties": {
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.ResourceDeployStatus"
                    }
                },
                "service_name": {
                    "type": "string"
                }
            }
        },
        "service.ServiceOption": {
            "type": "object",
            "properties": {
                "service": {
                    "$ref": "#/definitions/models.Service"
                },
                "service_module": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_koderover_zadig_pkg_microservice_aslan_core_service_service.ServiceModule"
                    }
                },
                "service_variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ServiceVariableKV"
                    }
                },
                "system_variable": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_koderover_zadig_pkg_microservice_aslan_core_service_service.Variable"
                    }
                },
                "variable_yaml": {
                    "type": "string"
                },
                "yaml": {
                    "type": "string"
                }
            }
        },
        "service.ServiceResp": {
            "type": "object",
            "properties": {
                "deploy_strategy": {
                    "type": "string"
                },
                "env_configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EnvConfig"
                    }
                },
                "env_name": {
                    "type": "string"
                },
                "env_statuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EnvStatus"
                    }
                },
                "error": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ingress": {
                    "$ref": "#/definitions/service.IngressInfo"
                },
                "is_helm_chart_deploy": {
                    "type": "boolean"
                },
                "istio_gateway": {
                    "$ref": "#/definitions/service.IstioGatewayInfo"
                },
                "product_name": {
                    "type": "string"
                },
                "ready": {
                    "description": "deprecated",
                    "type": "string"
                },
                "release_name": {
                    "type": "string"
                },
                "revision": {
                    "type": "integer"
                },
                "service_display_name": {
                    "type": "string"
                },
                "service_name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatable": {
                    "type": "boolean"
                },
                "workLoadType": {
                    "type": "string"
                },
                "zadigx_release_tag": {
                    "type": "string"
                },
                "zadigx_release_type": {
                    "description": "ZadigXReleaseType represents the service contain created by zadigx release workflow\nfrontend should limit some operations on these services",
                    "type": "string"
                }
            }
        },
        "service.SetIstioGrayscaleConfigRequest": {
            "type": "object",
            "properties": {
                "grayscale_strategy": {
                    "type": "string"
                },
                "header_match_configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.IstioHeaderMatchConfig"
                    }
                },
                "weight_configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.IstioWeightConfig"
                    }
                }
            }
        },
        "service.SetupPortalServiceRequest": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string"
                },
                "port_number": {
                    "type": "integer"
                },
                "port_protocol": {
                    "type": "string"
                }
            }
        },
        "service.SharedNSEnvs": {
            "type": "object",
            "properties": {
                "env_name": {
                    "type": "string"
                },
                "production": {
                    "type": "boolean"
                },
                "project_name": {
                    "type": "string"
                }
            }
        },
        "service.SvcDiffResult": {
            "type": "object",
            "properties": {
                "chart_name": {
                    "type": "string"
                },
                "current": {
                    "$ref": "#/definitions/service.TmplYaml"
                },
                "deployed_from_chart": {
                    "type": "boolean"
                },
                "error": {
                    "type": "string"
                },
                "latest": {
                    "$ref": "#/definitions/service.TmplYaml"
                },
                "release_name": {
                    "type": "string"
                },
                "service_name": {
                    "type": "string"
                }
            }
        },
        "service.SvcResp": {
            "type": "object",
            "properties": {
                "cron_jobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/resource.CronJob"
                    }
                },
                "env_name": {
                    "type": "string"
                },
                "group_name": {
                    "type": "string"
                },
                "ingress": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/resource.Ingress"
                    }
                },
                "namespace": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "scales": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/resource.Workload"
                    }
                },
                "service_endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/resource.Service"
                    }
                },
                "service_name": {
                    "type": "string"
                }
            }
        },
        "service.SvcRevision": {
            "type": "object",
            "properties": {
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Container"
                    }
                },
                "current_revision": {
                    "type": "integer"
                },
                "deleted": {
                    "type": "boolean"
                },
                "deploy_strategy": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "new": {
                    "type": "boolean"
                },
                "next_revision": {
                    "type": "integer"
                },
                "service_name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatable": {
                    "type": "boolean"
                },
                "update_service_tmpl": {
                    "type": "boolean"
                },
                "variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.RenderVariableKV"
                    }
                },
                "variable_yaml": {
                    "type": "string"
                }
            }
        },
        "service.SyncCollaborationInstanceArgs": {
            "type": "object",
            "properties": {
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.Product"
                    }
                }
            }
        },
        "service.TmplYaml": {
            "type": "object",
            "properties": {
                "revision": {
                    "type": "integer"
                },
                "update_by": {
                    "type": "string"
                },
                "yaml": {
                    "type": "string"
                }
            }
        },
        "service.UpdateEnv": {
            "type": "object",
            "properties": {
                "env_name": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.UpdateServiceArg"
                    }
                }
            }
        },
        "service.UpdateMultiHelmProductArg": {
            "type": "object",
            "properties": {
                "chartValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.HelmSvcRenderArg"
                    }
                },
                "deletedServices": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "envNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "productName": {
                    "type": "string"
                },
                "replacePolicy": {
                    "description": "TODO logic not implemented",
                    "type": "string"
                }
            }
        },
        "service.UpdateServiceArg": {
            "type": "object",
            "properties": {
                "deploy_strategy": {
                    "type": "string"
                },
                "service_name": {
                    "type": "string"
                },
                "variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.RenderVariableKV"
                    }
                }
            }
        },
        "service.ValuesDataArgs": {
            "type": "object",
            "properties": {
                "autoSync": {
                    "type": "boolean"
                },
                "gitRepoConfig": {
                    "$ref": "#/definitions/service.RepoConfig"
                },
                "source_id": {
                    "type": "string"
                },
                "yamlSource": {
                    "type": "string"
                }
            }
        },
        "service.ValuesResp": {
            "type": "object",
            "properties": {
                "valuesYaml": {
                    "type": "string"
                }
            }
        },
        "setting.IntegrationLevel": {
            "type": "string",
            "enum": [
                "system",
                "project"
            ],
            "x-enum-varnames": [
                "IntegrationLevelSystem",
                "IntegrationLevelProject"
            ]
        },
        "setting.PMHostStatus": {
            "type": "string",
            "enum": [
                "normal",
                "abnormal"
            ],
            "x-enum-varnames": [
                "PMHostStatusNormal",
                "PMHostStatusAbnormal"
            ]
        },
        "template.CustomYaml": {
            "type": "object",
            "properties": {
                "auto_sync": {
                    "type": "boolean"
                },
                "render_variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.RenderVariableKV"
                    }
                },
                "source": {
                    "type": "string"
                },
                "source_detail": {},
                "source_id": {
                    "type": "string"
                },
                "yaml_content": {
                    "type": "string"
                }
            }
        },
        "template.GitRepoConfig": {
            "type": "object",
            "properties": {
                "branch": {
                    "type": "string"
                },
                "codehost_id": {
                    "type": "integer"
                },
                "namespace": {
                    "description": "records the actual namespace of repo, used to generate correct project name",
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "repo": {
                    "type": "string"
                },
                "values_paths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "template.RenderKV": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "state": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "template.ServiceRender": {
            "type": "object",
            "properties": {
                "chart_name": {
                    "type": "string"
                },
                "chart_repo": {
                    "description": "---- for helm services begin ----",
                    "type": "string"
                },
                "chart_version": {
                    "type": "string"
                },
                "is_helm_chart_deploy": {
                    "type": "boolean"
                },
                "override_values": {
                    "description": "used for helm services, json-encoded string of kv value",
                    "type": "string"
                },
                "override_yaml": {
                    "description": "OverrideYaml will be used in both helm and k8s projects\nIn k8s this is variable_yaml",
                    "allOf": [
                        {
                            "$ref": "#/definitions/template.CustomYaml"
                        }
                    ]
                },
                "release_name": {
                    "type": "string"
                },
                "service_name": {
                    "type": "string"
                },
                "values_yaml": {
                    "type": "string"
                }
            }
        },
        "template.YamlDetail": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "service_variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ServiceVariableKV"
                    }
                },
                "variable_yaml": {
                    "type": "string"
                }
            }
        },
        "template.YamlTemplate": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "service_variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ServiceVariableKV"
                    }
                },
                "variable_yaml": {
                    "type": "string"
                }
            }
        },
        "types.AuthType": {
            "type": "string",
            "enum": [
                "SSH",
                "PrivateAccessToken"
            ],
            "x-enum-varnames": [
                "SSHAuthType",
                "PrivateAccessTokenAuthType"
            ]
        },
        "types.GlobalVariableKV": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "related_services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "$ref": "#/definitions/types.ServiceVariableKVType"
                },
                "value": {}
            }
        },
        "types.RenderVariableKV": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "$ref": "#/definitions/types.ServiceVariableKVType"
                },
                "use_global_variable": {
                    "type": "boolean"
                },
                "value": {}
            }
        },
        "types.ServiceVariableKV": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "$ref": "#/definitions/types.ServiceVariableKVType"
                },
                "value": {}
            }
        },
        "types.ServiceVariableKVType": {
            "type": "string",
            "enum": [
                "bool",
                "string",
                "enum",
                "yaml"
            ],
            "x-enum-varnames": [
                "ServiceVariableKVTypeBoolean",
                "ServiceVariableKVTypeString",
                "ServiceVariableKVTypeEnum",
                "ServiceVariableKVTypeYaml"
            ]
        },
        "types.ServiceWithVariable": {
            "type": "object",
            "properties": {
                "service_name": {
                    "type": "string"
                },
                "variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.RenderVariableKV"
                    }
                },
                "variable_yaml": {
                    "type": "string"
                }
            }
        },
        "util.KeyValue": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {}
            }
        },
        "workflow.GetHelmValuesDifferenceResp": {
            "type": "object",
            "properties": {
                "current": {
                    "type": "string"
                },
                "latest": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Zadig aslan service REST APIs",
	Description:      "The API doc is targeting for Zadig developers rather than Zadig users.\nThe majority of these APIs are not designed for public use, there is no guarantee on version compatibility.\nPlease reach out to contact@koderover.com before you decide to depend on these APIs directly.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
