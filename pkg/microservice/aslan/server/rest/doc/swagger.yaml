definitions:
  config.CollaborationType:
    enum:
    - share
    - new
    type: string
    x-enum-varnames:
    - CollaborationShare
    - CollaborationNew
  config.CommonEnvCfgType:
    enum:
    - Ingress
    - ConfigMap
    - Secret
    - PVC
    type: string
    x-enum-varnames:
    - CommonEnvCfgTypeIngress
    - CommonEnvCfgTypeConfigMap
    - CommonEnvCfgTypeSecret
    - CommonEnvCfgTypePvc
  config.DBInstanceType:
    enum:
    - mysql
    - mariadb
    type: string
    x-enum-varnames:
    - DBInstanceTypeMySQL
    - DBInstanceTypeMariaDB
  config.DeployContent:
    enum:
    - image
    - vars
    - config
    type: string
    x-enum-varnames:
    - DeployImage
    - DeployVars
    - DeployConfig
  config.DeploySourceType:
    enum:
    - runtime
    - fromjob
    type: string
    x-enum-varnames:
    - SourceRuntime
    - SourceFromJob
  config.JiraAuthType:
    enum:
    - password_or_token
    - personal_access_token
    type: string
    x-enum-varnames:
    - JiraBasicAuth
    - JiraPersonalAccessToken
  github_com_koderover_zadig_pkg_microservice_aslan_core_common_service.EnvService:
    properties:
      deployed:
        type: boolean
      latest_variable_kvs:
        items:
          $ref: '#/definitions/types.RenderVariableKV'
        type: array
      latest_variable_yaml:
        type: string
      service_modules:
        items:
          $ref: '#/definitions/models.Container'
        type: array
      service_name:
        type: string
      updatable:
        type: boolean
      variable_kvs:
        items:
          $ref: '#/definitions/types.RenderVariableKV'
        type: array
      variable_yaml:
        type: string
    type: object
  github_com_koderover_zadig_pkg_microservice_aslan_core_environment_service.ProductResp:
    properties:
      cluster_id:
        type: string
      cluster_name:
        type: string
      env_name:
        type: string
      error:
        type: string
      id:
        type: string
      is_existed:
        type: boolean
      is_local:
        type: boolean
      is_prod:
        type: boolean
      isPublic:
        type: boolean
      istio_grayscale_base_env:
        type: string
      istio_grayscale_enable:
        description: New Since v2.1.0
        type: boolean
      istio_grayscale_is_base:
        type: boolean
      namespace:
        type: string
      product_name:
        type: string
      recycle_day:
        type: integer
      registry_id:
        type: string
      related_envs:
        description: New Since v2.1.0
        items:
          $ref: '#/definitions/service.SharedNSEnvs'
        type: array
      render:
        $ref: '#/definitions/models.RenderInfo'
      services:
        items:
          items:
            $ref: '#/definitions/models.ProductService'
          type: array
        type: array
      share_env_base_env:
        type: string
      share_env_enable:
        description: New Since v1.11.0
        type: boolean
      share_env_is_base:
        type: boolean
      source:
        type: string
      status:
        type: string
      update_by:
        type: string
      update_time:
        type: integer
      vars:
        items:
          $ref: '#/definitions/template.RenderKV'
        type: array
    type: object
  github_com_koderover_zadig_pkg_microservice_aslan_core_service_service.ServiceModule:
    properties:
      build_names:
        items:
          type: string
        type: array
      image:
        type: string
      image_name:
        type: string
      imagePath:
        $ref: '#/definitions/models.ImagePathSpec'
      name:
        type: string
    type: object
  github_com_koderover_zadig_pkg_microservice_aslan_core_service_service.Variable:
    properties:
      description:
        type: string
      key:
        type: string
      value:
        type: string
    type: object
  handler.CreateLLMIntegrationRequest:
    properties:
      base_url:
        type: string
      enable_proxy:
        type: boolean
      name:
        type: string
      token:
        type: string
    type: object
  handler.DeleteProductServicesRequest:
    properties:
      service_names:
        items:
          type: string
        type: array
    type: object
  handler.ModuleAndImage:
    properties:
      image:
        type: string
      name:
        type: string
    type: object
  handler.checkLLMIntegrationResponse:
    properties:
      check:
        type: boolean
    type: object
  handler.createServiceTemplateRequest:
    properties:
      product_name:
        type: string
      service_name:
        type: string
      service_variable_kvs:
        items:
          $ref: '#/definitions/types.ServiceVariableKV'
        type: array
      source:
        type: string
      type:
        type: string
      variable_yaml:
        type: string
      visibility:
        type: string
      yaml:
        type: string
    required:
    - product_name
    - service_name
    - source
    - type
    - visibility
    - yaml
    type: object
  handler.filterDeployServiceVarsQuery:
    properties:
      env_name:
        type: string
      job_name:
        type: string
      service_names:
        items:
          type: string
        type: array
      workflow_name:
        type: string
    type: object
  handler.getGlobalVariablesRespone:
    properties:
      global_variables:
        items:
          $ref: '#/definitions/types.GlobalVariableKV'
        type: array
      revision:
        type: integer
    type: object
  handler.getHelmValuesDifferenceReq:
    properties:
      env_name:
        type: string
      is_helm_chart_deploy:
        type: boolean
      production:
        type: boolean
      service_modules:
        items:
          $ref: '#/definitions/handler.ModuleAndImage'
        type: array
      service_name:
        type: string
      update_service_revision:
        type: boolean
      variable_yaml:
        type: string
    type: object
  handler.getInitProductResponse:
    properties:
      chart_infos:
        items:
          $ref: '#/definitions/template.ServiceRender'
        type: array
      create_time:
        type: integer
      product_name:
        type: string
      render:
        $ref: '#/definitions/models.RenderInfo'
      revision:
        type: integer
      services:
        items:
          items:
            $ref: '#/definitions/models.ProductService'
          type: array
        type: array
      source:
        type: string
      update_by:
        type: string
    type: object
  handler.getYamlTemplateVariablesReq:
    properties:
      content:
        type: string
      variable_yaml:
        type: string
    required:
    - content
    - variable_yaml
    type: object
  handler.updateGlobalVariablesRequest:
    properties:
      global_variables:
        items:
          $ref: '#/definitions/types.ServiceVariableKV'
        type: array
    type: object
  handler.updateK8sProductGlobalVariablesRequest:
    properties:
      current_revision:
        type: integer
      global_variables:
        items:
          $ref: '#/definitions/types.GlobalVariableKV'
        type: array
    type: object
  handler.updateServiceVariableRequest:
    properties:
      service_variable_kvs:
        items:
          $ref: '#/definitions/types.ServiceVariableKV'
        type: array
      variable_yaml:
        type: string
    required:
    - service_variable_kvs
    - variable_yaml
    type: object
  models.AnalysisConfig:
    properties:
      resource_types:
        items:
          $ref: '#/definitions/models.ResourceType'
        type: array
    type: object
  models.CodeHost:
    properties:
      access_token:
        type: string
      address:
        type: string
      alias:
        type: string
      application_id:
        type: string
      auth_type:
        $ref: '#/definitions/types.AuthType'
      client_secret:
        type: string
      created_at:
        type: integer
      deleted_at:
        type: integer
      enable_proxy:
        type: boolean
      id:
        type: integer
      integration_level:
        $ref: '#/definitions/setting.IntegrationLevel'
      is_ready:
        type: string
      namespace:
        type: string
      password:
        type: string
      private_access_token:
        type: string
      project:
        type: string
      refresh_token:
        type: string
      region:
        type: string
      ssh_key:
        type: string
      type:
        type: string
      updated_at:
        type: integer
      username:
        type: string
    type: object
  models.Commit:
    properties:
      message:
        type: string
      sha:
        type: string
    type: object
  models.Container:
    properties:
      image:
        type: string
      image_name:
        type: string
      imagePath:
        $ref: '#/definitions/models.ImagePathSpec'
      name:
        type: string
    type: object
  models.CreateUpdateCommonEnvCfgArgs:
    properties:
      auto_sync:
        type: boolean
      common_env_cfg_type:
        $ref: '#/definitions/config.CommonEnvCfgType'
      env_name:
        type: string
      git_repo_config:
        $ref: '#/definitions/template.GitRepoConfig'
      name:
        type: string
      product_name:
        type: string
      restart_associated_svc:
        type: boolean
      service_name:
        type: string
      services:
        items:
          type: string
        type: array
      yaml_data:
        type: string
    type: object
  models.DBInstance:
    properties:
      created_at:
        type: integer
      host:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        type: string
      port:
        type: string
      projects:
        items:
          type: string
        type: array
      type:
        $ref: '#/definitions/config.DBInstanceType'
      update_by:
        type: string
      updated_at:
        type: integer
      username:
        type: string
    type: object
  models.DeplopyVariableConfig:
    properties:
      use_global_variable:
        type: boolean
      variable_key:
        type: string
    type: object
  models.DeployService:
    properties:
      key_vals:
        description: KeyVals Deprecated since 1.18
        items:
          $ref: '#/definitions/models.ServiceKeyVal'
        type: array
      latest_key_vals:
        description: LatestKeyVals Deprecated since 1.18
        items:
          $ref: '#/definitions/models.ServiceKeyVal'
        type: array
      latest_variable_kvs:
        description: LatestVariableKVs added since 1.18
        items:
          $ref: '#/definitions/types.RenderVariableKV'
        type: array
      service_name:
        type: string
      updatable:
        type: boolean
      update_config:
        type: boolean
      variable_configs:
        description: VariableConfigs added since 1.18
        items:
          $ref: '#/definitions/models.DeplopyVariableConfig'
        type: array
      variable_kvs:
        description: VariableKVs added since 1.18
        items:
          $ref: '#/definitions/types.RenderVariableKV'
        type: array
      variable_yaml:
        description: VariableYaml added since 1.18, used for helm production environments
        type: string
    type: object
  models.EnvConfig:
    properties:
      env_name:
        type: string
      host_ids:
        items:
          type: string
        type: array
      labels:
        items:
          type: string
        type: array
    type: object
  models.EnvStatus:
    properties:
      address:
        type: string
      env_name:
        type: string
      host_id:
        type: string
      pm_info:
        $ref: '#/definitions/models.PmInfo'
      status:
        type: string
    type: object
  models.GUIConfig:
    properties:
      deployment: {}
      ingress: {}
      service: {}
    type: object
  models.HelmChart:
    properties:
      name:
        type: string
      repo:
        type: string
      values_yaml:
        type: string
      version:
        type: string
    type: object
  models.HelmRepo:
    properties:
      created_at:
        type: integer
      id:
        type: string
      password:
        type: string
      projects:
        items:
          type: string
        type: array
      repo_name:
        type: string
      update_by:
        type: string
      updated_at:
        type: integer
      url:
        type: string
      username:
        type: string
    type: object
  models.ImagePathSpec:
    properties:
      image:
        type: string
      namespace:
        type: string
      repo:
        type: string
      tag:
        type: string
    type: object
  models.IstioGrayscale:
    properties:
      base_env:
        type: string
      enable:
        type: boolean
      grayscale_strategy:
        type: string
      header_match_configs:
        items:
          $ref: '#/definitions/models.IstioHeaderMatchConfig'
        type: array
      is_base:
        type: boolean
      weight_configs:
        items:
          $ref: '#/definitions/models.IstioWeightConfig'
        type: array
    type: object
  models.IstioHeaderMatch:
    properties:
      key:
        type: string
      match:
        type: string
      value:
        type: string
    type: object
  models.IstioHeaderMatchConfig:
    properties:
      env:
        type: string
      header_match:
        items:
          $ref: '#/definitions/models.IstioHeaderMatch'
        type: array
    type: object
  models.IstioWeightConfig:
    properties:
      env:
        type: string
      weight:
        type: integer
    type: object
  models.LLMIntegration:
    properties:
      base_url:
        type: string
      enable_proxy:
        type: boolean
      id:
        type: string
      name:
        type: string
      token:
        type: string
      update_time:
        type: integer
      updated_by:
        type: string
    type: object
  models.NotificationConfig:
    properties:
      events:
        items:
          $ref: '#/definitions/models.NotificationEvent'
        type: array
      webhook_type:
        $ref: '#/definitions/models.WebHookType'
      webhook_url:
        type: string
    type: object
  models.NotificationEvent:
    enum:
    - notification_event_analyzer_normal
    - notification_event_analyzer_abnormal
    type: string
    x-enum-varnames:
    - NotificationEventAnalyzerNoraml
    - NotificationEventAnalyzerAbnormal
  models.ParameterSettingType:
    enum:
    - string
    - choice
    - external
    type: string
    x-enum-varnames:
    - StringType
    - ChoiceType
    - ExternalType
  models.PmHealthCheck:
    properties:
      current_healthy_num:
        type: integer
      current_unhealthy_num:
        type: integer
      healthy_threshold:
        type: integer
      interval:
        type: integer
      path:
        type: string
      port:
        type: integer
      protocol:
        type: string
      time_out:
        type: integer
      unhealthy_threshold:
        type: integer
    type: object
  models.PmInfo:
    properties:
      id:
        type: string
      ip:
        type: string
      is_prod:
        type: boolean
      label:
        type: string
      name:
        type: string
      port:
        type: integer
      provider:
        type: integer
      status:
        $ref: '#/definitions/setting.PMHostStatus'
    type: object
  models.ProductService:
    properties:
      containers:
        items:
          $ref: '#/definitions/models.Container'
        type: array
      deploy_strategy:
        type: string
      env_configs:
        items:
          $ref: '#/definitions/models.EnvConfig'
        type: array
      error:
        type: string
      product_name:
        type: string
      release_name:
        type: string
      render:
        allOf:
        - $ref: '#/definitions/template.ServiceRender'
        description: New since 1.9.0 used to replace service renders in render_set
      resources:
        items:
          $ref: '#/definitions/models.ServiceResource'
        type: array
      revision:
        type: integer
      service_name:
        type: string
      type:
        type: string
      updatable:
        type: boolean
      update_time:
        type: integer
      variable_kvs:
        items:
          $ref: '#/definitions/types.RenderVariableKV'
        type: array
      variable_yaml:
        type: string
    type: object
  models.ProductShareEnv:
    properties:
      base_env:
        type: string
      enable:
        type: boolean
      is_base:
        type: boolean
    type: object
  models.ProjectDetail:
    properties:
      project_deploy_type:
        type: string
      project_key:
        type: string
      project_name:
        type: string
    type: object
  models.ProjectManagement:
    properties:
      id:
        type: string
      jira_auth_type:
        $ref: '#/definitions/config.JiraAuthType'
      jira_host:
        type: string
      jira_personal_access_token:
        description: JiraPersonalAccessToken is used for bearer token
        type: string
      jira_token:
        description: JiraToken is used in place of password for basic auth with username
        type: string
      jira_user:
        type: string
      meego_host:
        type: string
      meego_plugin_id:
        type: string
      meego_plugin_secret:
        type: string
      meego_user_key:
        type: string
      system_identity:
        type: string
      type:
        type: string
      updated_at:
        type: integer
    type: object
  models.RegistryAdvancedSetting:
    properties:
      enable_tls:
        description: New field since v1.11 to support self-signed TLS certificate
        type: boolean
      modified:
        description: |-
          indicator to make sure if the advanced has been modified
          This is solely a field for frontend display and not used anywhere else in the backend system
          TODO: whether this field should exist needs a discussion
        type: boolean
      tls_cert:
        type: string
    type: object
  models.RegistryNamespace:
    properties:
      access_key:
        type: string
      advanced_setting:
        $ref: '#/definitions/models.RegistryAdvancedSetting'
      id:
        type: string
      is_default:
        type: boolean
      namespace:
        description: |-
          Namespace is NOT a required field, this could be empty when the registry is AWS ECR or so.
          use with CAUTION !!!!
        type: string
      projects:
        items:
          type: string
        type: array
      reg_addr:
        type: string
      reg_provider:
        type: string
      reg_type:
        type: string
      region:
        type: string
      secret_key:
        type: string
      update_by:
        type: string
      update_time:
        type: integer
    type: object
  models.RenderInfo:
    properties:
      description:
        type: string
      name:
        type: string
      product_tmpl:
        type: string
      revision:
        type: integer
    type: object
  models.ResourceType:
    enum:
    - Pod
    - Deployment
    - ReplicaSet
    - PersistentVolumeClaim
    - Service
    - Ingress
    - StatefulSet
    - CronJob
    - HorizontalPodAutoScaler
    - PodDisruptionBudget
    - NetworkPolicy
    type: string
    x-enum-varnames:
    - ResourceTypePod
    - ResourceTypeDeployment
    - ResourceTypeReplicaSet
    - ResourceTypePVC
    - ResourceTypeService
    - ResourceTypeIngress
    - ResourceTypeStatefulSet
    - ResourceTypeCronJob
    - ResourceTypeHPA
    - ResourceTypePDB
    - ResourceTypeNetworkPolicy
  models.S3Storage:
    properties:
      ak:
        type: string
      bucket:
        type: string
      endpoint:
        type: string
      id:
        type: string
      insecure:
        type: boolean
      is_default:
        type: boolean
      projects:
        items:
          type: string
        type: array
      provider:
        type: integer
      region:
        type: string
      sk:
        type: string
      subfolder:
        type: string
      update_time:
        type: integer
      updated_by:
        type: string
    type: object
  models.Service:
    properties:
      auto_sync:
        type: boolean
      branch_name:
        type: string
      build_name:
        type: string
      codehost_id:
        type: integer
      commit:
        $ref: '#/definitions/models.Commit'
      containers:
        items:
          $ref: '#/definitions/models.Container'
        type: array
      create_by:
        type: string
      create_from: {}
      create_time:
        type: integer
      deploy_time:
        type: integer
      description:
        type: string
      env_configs:
        items:
          $ref: '#/definitions/models.EnvConfig'
        type: array
      env_name:
        type: string
      env_statuses:
        items:
          $ref: '#/definitions/models.EnvStatus'
        type: array
      gerrit_branch_name:
        type: string
      gerrit_codeHost_id:
        type: integer
      gerrit_path:
        type: string
      gerrit_remote_name:
        type: string
      gerrit_repo_name:
        type: string
      gitee_path:
        type: string
      gui_config:
        $ref: '#/definitions/models.GUIConfig'
      hash256:
        type: string
      health_checks:
        items:
          $ref: '#/definitions/models.PmHealthCheck'
        type: array
      helm_chart:
        $ref: '#/definitions/models.HelmChart'
      is_dir:
        type: boolean
      load_path:
        type: string
      product_name:
        type: string
      release_naming:
        type: string
      repo_name:
        type: string
      repo_namespace:
        type: string
      repo_owner:
        type: string
      repo_uuid:
        type: string
      revision:
        type: integer
      service_name:
        type: string
      service_variable_kvs:
        description: New since 1.18.0, stores the variable kvs of k8s services
        items:
          $ref: '#/definitions/types.ServiceVariableKV'
        type: array
      service_vars:
        description: DEPRECATED, New since 1.16.0, stores keys in variables which
          can be set in env
        items:
          type: string
        type: array
      source:
        type: string
      src_path:
        type: string
      status:
        type: string
      team:
        type: string
      template_id:
        type: string
      type:
        type: string
      variable_yaml:
        description: New since 1.16.0, stores the variable yaml of k8s services
        type: string
      visibility:
        description: DEPRECATED since 1.17.0
        type: string
      workload_type:
        description: WorkloadType is set in host projects
        type: string
      yaml:
        type: string
    type: object
  models.ServiceAndImage:
    properties:
      image:
        type: string
      image_name:
        type: string
      service_module:
        type: string
      service_name:
        type: string
    type: object
  models.ServiceKeyVal:
    properties:
      choice_option:
        items:
          type: string
        type: array
      is_credential:
        type: boolean
      key:
        type: string
      type:
        $ref: '#/definitions/models.ParameterSettingType'
      value: {}
    type: object
  models.ServiceResource:
    properties:
      group:
        type: string
      kind:
        type: string
      name:
        type: string
      version:
        type: string
    type: object
  models.WebHookType:
    enum:
    - feishu
    - dingding
    - wechat
    type: string
    x-enum-varnames:
    - WebHookTypeFeishu
    - WebHookTypeDingding
    - WebHookTypeWeChat
  models.ZadigDeployJobSpec:
    properties:
      deploy_contents:
        items:
          $ref: '#/definitions/config.DeployContent'
        type: array
      deploy_type:
        type: string
      env:
        type: string
      job_name:
        description: 当 source 为 fromjob 时需要，指定部署镜像来源是上游哪一个构建任务
        type: string
      origin_job_name:
        description: save the origin quoted job name
        type: string
      production:
        type: boolean
      service_and_images:
        items:
          $ref: '#/definitions/models.ServiceAndImage'
        type: array
      services:
        items:
          $ref: '#/definitions/models.DeployService'
        type: array
      skip_check_run_status:
        type: boolean
      source:
        allOf:
        - $ref: '#/definitions/config.DeploySourceType'
        description: fromjob/runtime, runtime 表示运行时输入，fromjob 表示从上游构建任务中获取
    type: object
  resource.Backend:
    properties:
      service_name:
        type: string
      service_port:
        type: string
    type: object
  resource.Container:
    properties:
      finished_at:
        description: Time at which the container last terminated
        type: integer
      image:
        type: string
      message:
        description: Message regarding the last termination of the container
        type: string
      name:
        type: string
      ports:
        items:
          $ref: '#/definitions/resource.ContainerPort'
        type: array
      ready:
        type: boolean
      reason:
        description: reason from the last termination of the container
        type: string
      restart_count:
        type: integer
      started_at:
        description: Time at which previous execution of the container started
        type: integer
      status:
        type: string
    type: object
  resource.ContainerImage:
    properties:
      image:
        type: string
      image_name:
        type: string
      name:
        type: string
    type: object
  resource.ContainerPort:
    properties:
      containerPort:
        description: |-
          Number of port to expose on the pod's IP address.
          This must be a valid port number, 0 < x < 65536.
        type: integer
      hostIP:
        description: |-
          What host IP to bind the external port to.
          +optional
        type: string
      hostPort:
        description: |-
          Number of port to expose on the host.
          If specified, this must be a valid port number, 0 < x < 65536.
          If HostNetwork is specified, this must match ContainerPort.
          Most containers do not need this.
          +optional
        type: integer
      name:
        description: |-
          If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
          named port in a pod must have a unique name. Name for the port that can be
          referred to by services.
          +optional
        type: string
      protocol:
        allOf:
        - $ref: '#/definitions/resource.Protocol'
        description: |-
          Protocol for port. Must be UDP, TCP, or SCTP.
          Defaults to "TCP".
          +optional
          +default="TCP"
    type: object
  resource.CronJob:
    properties:
      active:
        type: integer
      create_time:
        type: integer
      images:
        items:
          $ref: '#/definitions/resource.ContainerImage'
        type: array
      labels:
        additionalProperties:
          type: string
        type: object
      last_schedule:
        type: string
      name:
        type: string
      pods:
        items:
          $ref: '#/definitions/resource.Pod'
        type: array
      schedule:
        type: string
      suspend:
        type: boolean
    type: object
  resource.HostInfo:
    properties:
      backend:
        items:
          $ref: '#/definitions/resource.Backend'
        type: array
      host:
        type: string
    type: object
  resource.Ingress:
    properties:
      age:
        type: string
      host_info:
        items:
          $ref: '#/definitions/resource.HostInfo'
        type: array
      ips:
        items:
          type: string
        type: array
      labels:
        additionalProperties:
          type: string
        type: object
      name:
        type: string
    type: object
  resource.Pod:
    properties:
      age:
        type: string
      containers:
        items:
          $ref: '#/definitions/resource.Container'
        type: array
      containers_message:
        type: string
      containers_ready:
        type: boolean
      createtime:
        type: integer
      enable_debug_container:
        type: boolean
      host_ip:
        type: string
      ip:
        type: string
      kind:
        type: string
      labels:
        additionalProperties:
          type: string
        type: object
      name:
        type: string
      node_name:
        type: string
      pod_ready:
        type: boolean
      status:
        type: string
    type: object
  resource.Protocol:
    enum:
    - TCP
    - UDP
    - SCTP
    type: string
    x-enum-varnames:
    - ProtocolTCP
    - ProtocolUDP
    - ProtocolSCTP
  resource.Service:
    properties:
      age:
        type: string
      endpoints:
        items:
          $ref: '#/definitions/resource.ServicePort'
        type: array
      labels:
        additionalProperties:
          type: string
        type: object
      name:
        type: string
    type: object
  resource.ServicePort:
    properties:
      node_port:
        type: integer
      service_name:
        type: string
      service_port:
        type: integer
    type: object
  resource.Workload:
    properties:
      images:
        items:
          $ref: '#/definitions/resource.ContainerImage'
        type: array
      name:
        type: string
      pods:
        items:
          $ref: '#/definitions/resource.Pod'
        type: array
      replicas:
        type: integer
      type:
        type: string
      zadigx_release_tag:
        type: string
      zadigx_release_type:
        description: |-
          ZadigXReleaseType represent the release type of workload created by zadigx when it is not empty
          frontend should limit or allow some operations on these workloads
        type: string
    type: object
  service.ConvertVaraibleKVAndYamlActionType:
    enum:
    - toKV
    - toYaml
    type: string
    x-enum-varnames:
    - ConvertVaraibleKVAndYamlActionTypeToKV
    - ConvertVaraibleKVAndYamlActionTypeToYaml
  service.ConvertVaraibleKVAndYamlArgs:
    properties:
      action:
        $ref: '#/definitions/service.ConvertVaraibleKVAndYamlActionType'
      kvs:
        items:
          $ref: '#/definitions/types.ServiceVariableKV'
        type: array
      yaml:
        type: string
    required:
    - action
    - kvs
    type: object
  service.CreateSingleProductArg:
    properties:
      alias:
        type: string
      base_env_name:
        type: string
      base_name:
        description: for collaboration mode
        type: string
      chartValues:
        items:
          $ref: '#/definitions/service.ProductHelmServiceCreationInfo'
        type: array
      cluster_id:
        type: string
      default_values:
        type: string
      defaultValues:
        description: TODO fix me
        type: string
      env_configs:
        description: New Since v1.13.0
        items:
          $ref: '#/definitions/models.CreateUpdateCommonEnvCfgArgs'
        type: array
      env_name:
        type: string
      global_variables:
        description: for k8s products
        items:
          $ref: '#/definitions/types.GlobalVariableKV'
        type: array
      is_existed:
        type: boolean
      istio_grayscale:
        allOf:
        - $ref: '#/definitions/models.IstioGrayscale'
        description: New Since v2.1.0
      namespace:
        type: string
      product_name:
        type: string
      production:
        type: boolean
      registry_id:
        type: string
      services:
        items:
          items:
            $ref: '#/definitions/service.ProductK8sServiceCreationInfo'
          type: array
        type: array
      share_env:
        allOf:
        - $ref: '#/definitions/models.ProductShareEnv'
        description: New Since v1.12.0
      valuesData:
        allOf:
        - $ref: '#/definitions/service.ValuesDataArgs'
        description: for helm products
    type: object
  service.DeployStatus:
    enum:
    - deployed
    - undeployed
    type: string
    x-enum-varnames:
    - StatusDeployed
    - StatusUnDeployed
  service.DeployableEnv:
    properties:
      cluster_id:
        type: string
      env_name:
        type: string
      global_variable_kvs:
        items:
          $ref: '#/definitions/types.GlobalVariableKV'
        type: array
      namespace:
        type: string
      services:
        items:
          $ref: '#/definitions/types.ServiceWithVariable'
        type: array
    type: object
  service.DeployableEnvResp:
    properties:
      envs:
        items:
          $ref: '#/definitions/service.DeployableEnv'
        type: array
    type: object
  service.EnvAnalysisCronArg:
    properties:
      cron:
        type: string
      enable:
        type: boolean
    type: object
  service.EnvAnalysisRespone:
    properties:
      result:
        type: string
    type: object
  service.EnvConfigsArgs:
    properties:
      analysis_config:
        $ref: '#/definitions/models.AnalysisConfig'
      notification_configs:
        items:
          $ref: '#/definitions/models.NotificationConfig'
        type: array
    type: object
  service.EnvDefinition:
    properties:
      cluster_name:
        type: string
      env_key:
        type: string
      namespace:
        type: string
    type: object
  service.EnvRendersetArg:
    properties:
      chartValues:
        items:
          $ref: '#/definitions/service.HelmSvcRenderArg'
        type: array
      defaultValues:
        type: string
      deployType:
        type: string
      updateServiceTmpl:
        type: boolean
      valuesData:
        $ref: '#/definitions/service.ValuesDataArgs'
    type: object
  service.EnvServices:
    properties:
      env_name:
        type: string
      product_name:
        type: string
      services:
        items:
          $ref: '#/definitions/github_com_koderover_zadig_pkg_microservice_aslan_core_common_service.EnvService'
        type: array
    type: object
  service.EnvSleepCronArg:
    properties:
      awake_cron:
        type: string
      awake_cron_enable:
        type: boolean
      sleep_cron:
        type: string
      sleep_cron_enable:
        type: boolean
    type: object
  service.EstimateValuesArg:
    properties:
      chartName:
        type: string
      chartRepo:
        type: string
      chartVersion:
        type: string
      defaultValues:
        type: string
      overrideValues:
        items:
          $ref: '#/definitions/service.KVPair'
        type: array
      overrideYaml:
        type: string
    type: object
  service.GetBizDirServiceDetailResponse:
    properties:
      chart_version:
        type: string
      env_name:
        type: string
      images:
        items:
          type: string
        type: array
      name:
        type: string
      production:
        type: boolean
      project_name:
        type: string
      status:
        type: string
      type:
        type: string
      update_time:
        type: integer
    type: object
  service.GetEnvServiceVersionYamlResponse:
    properties:
      type:
        type: string
      variable_yaml:
        type: string
      yaml:
        type: string
    type: object
  service.GetGlobalVariableCandidatesRespone:
    properties:
      key_name:
        type: string
      related_service:
        items:
          type: string
        type: array
    type: object
  service.GetPortalServiceResponse:
    properties:
      default_gateway_address:
        type: string
      servers:
        items:
          $ref: '#/definitions/service.SetupPortalServiceRequest'
        type: array
    type: object
  service.GetReleaseInstanceDeployStatusResponse:
    properties:
      chart_name:
        type: string
      chart_version:
        type: string
      release_name:
        type: string
      status:
        type: string
      values:
        type: string
    type: object
  service.GetServiceVersionYamlResponse:
    properties:
      type:
        type: string
      variable_yaml:
        type: string
      yaml:
        type: string
    type: object
  service.GetSvcRenderArg:
    properties:
      is_helm_chart_deploy:
        type: boolean
      service_or_release_name:
        type: string
    type: object
  service.GetSvcRenderRequest:
    properties:
      get_svc_render_args:
        items:
          $ref: '#/definitions/service.GetSvcRenderArg'
        type: array
    type: object
  service.GetWebhookConfigReponse:
    properties:
      secret:
        type: string
      url:
        type: string
    type: object
  service.GroupDetail:
    properties:
      group_name:
        type: string
      projects:
        items:
          $ref: '#/definitions/models.ProjectDetail'
        type: array
    type: object
  service.HelmDeployStatusCheckRequest:
    properties:
      cluster_id:
        type: string
      env_name:
        type: string
      namespace:
        type: string
      services:
        items:
          type: string
        type: array
    type: object
  service.HelmSvcRenderArg:
    properties:
      chart_name:
        type: string
      chart_repo:
        type: string
      chartVersion:
        type: string
      deploy_strategy:
        description: New since 1.16.0, used to determine if the service will be installed
        type: string
      envName:
        type: string
      is_chart_deploy:
        type: boolean
      overrideValues:
        items:
          $ref: '#/definitions/service.KVPair'
        type: array
      overrideYaml:
        type: string
      release_name:
        type: string
      serviceName:
        type: string
      valuesData:
        $ref: '#/definitions/service.ValuesDataArgs'
      variable_yaml:
        type: string
      yaml_data:
        $ref: '#/definitions/template.CustomYaml'
    type: object
  service.IngressInfo:
    properties:
      host_info:
        items:
          $ref: '#/definitions/resource.HostInfo'
        type: array
    type: object
  service.IstioGatewayInfo:
    properties:
      servers:
        items:
          $ref: '#/definitions/service.IstioGatewayServer'
        type: array
    type: object
  service.IstioGatewayServer:
    properties:
      host:
        type: string
      port_number:
        type: integer
      port_protocol:
        type: string
    type: object
  service.IstioGrayscaleChecks:
    properties:
      namespace_has_istio_label:
        type: boolean
      pods_have_istio_proxy:
        type: boolean
      workloads_have_k8s_service:
        type: boolean
      workloads_ready:
        type: boolean
    type: object
  service.IstioGrayscaleReady:
    properties:
      checks:
        $ref: '#/definitions/service.IstioGrayscaleChecks'
      is_ready:
        type: boolean
    type: object
  service.JiraProjectsResp:
    properties:
      key:
        type: string
      name:
        type: string
    type: object
  service.K8sDeployStatusCheckRequest:
    properties:
      cluster_id:
        type: string
      env_name:
        type: string
      namespace:
        type: string
      services:
        items:
          $ref: '#/definitions/service.K8sSvcRenderArg'
        type: array
    type: object
  service.K8sSvcRenderArg:
    properties:
      deploy_strategy:
        description: New since 1.16.0, used to determine if the service will be installed
        type: string
      env_name:
        type: string
      latest_variable_kvs:
        items:
          $ref: '#/definitions/types.RenderVariableKV'
        type: array
      latest_variable_yaml:
        type: string
      service_name:
        type: string
      variable_kvs:
        items:
          $ref: '#/definitions/types.RenderVariableKV'
        type: array
      variable_yaml:
        type: string
    type: object
  service.KVPair:
    properties:
      key:
        type: string
      value: {}
    type: object
  service.ListEnvServiceVersionsResponse:
    properties:
      create_by:
        type: string
      create_time:
        type: integer
      revision:
        type: integer
      service_name:
        type: string
    type: object
  service.ListPodsInfoRespone:
    properties:
      create_time:
        type: integer
      images:
        items:
          type: string
        type: array
      name:
        type: string
      ready:
        type: string
      status:
        type: string
    type: object
  service.ListServiceVersionsResponse:
    properties:
      create_by:
        type: string
      create_time:
        type: integer
      revision:
        type: integer
      service_name:
        type: string
    type: object
  service.LoadServiceFromYamlTemplateReq:
    properties:
      auto_sync:
        type: boolean
      project_name:
        type: string
      service_name:
        type: string
      service_variable_kvs:
        items:
          $ref: '#/definitions/types.ServiceVariableKV'
        type: array
      template_id:
        type: string
      variable_yaml:
        type: string
    type: object
  service.MeegoProject:
    properties:
      key:
        type: string
      name:
        type: string
    type: object
  service.MeegoProjectResp:
    properties:
      projects:
        items:
          $ref: '#/definitions/service.MeegoProject'
        type: array
    type: object
  service.MeegoWorkItem:
    properties:
      current_state:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  service.MeegoWorkItemResp:
    properties:
      work_items:
        items:
          $ref: '#/definitions/service.MeegoWorkItem'
        type: array
    type: object
  service.MeegoWorkItemType:
    properties:
      name:
        type: string
      type_key:
        type: string
    type: object
  service.MeegoWorkItemTypeResp:
    properties:
      work_item_types:
        items:
          $ref: '#/definitions/service.MeegoWorkItemType'
        type: array
    type: object
  service.OpenAPIInitializeProjectReq:
    properties:
      description:
        type: string
      env_list:
        items:
          $ref: '#/definitions/service.EnvDefinition'
        type: array
      is_public:
        type: boolean
      project_key:
        type: string
      project_name:
        type: string
      service_list:
        items:
          $ref: '#/definitions/service.ServiceDefinition'
        type: array
    type: object
  service.PreviewServiceArgs:
    properties:
      env_name:
        type: string
      product_name:
        type: string
      service_modules:
        items:
          $ref: '#/definitions/models.Container'
        type: array
      service_name:
        type: string
      update_service_revision:
        type: boolean
      variable_kvs:
        items:
          $ref: '#/definitions/types.RenderVariableKV'
        type: array
    type: object
  service.Product:
    properties:
      base_name:
        type: string
      chartValues:
        items:
          $ref: '#/definitions/service.HelmSvcRenderArg'
        type: array
      collaboration_mode:
        type: string
      collaboration_type:
        $ref: '#/definitions/config.CollaborationType'
      default_values:
        type: string
      deploy_type:
        type: string
      global_variables:
        items:
          $ref: '#/definitions/types.GlobalVariableKV'
        type: array
      name:
        type: string
      services:
        items:
          $ref: '#/definitions/service.K8sSvcRenderArg'
        type: array
      valuesData:
        $ref: '#/definitions/service.ValuesDataArgs'
      yaml_data:
        $ref: '#/definitions/template.CustomYaml'
    type: object
  service.ProductHelmServiceCreationInfo:
    properties:
      chart_name:
        type: string
      chart_repo:
        type: string
      chartVersion:
        type: string
      deploy_strategy:
        type: string
      envName:
        type: string
      is_chart_deploy:
        type: boolean
      overrideValues:
        items:
          $ref: '#/definitions/service.KVPair'
        type: array
      overrideYaml:
        type: string
      release_name:
        type: string
      serviceName:
        type: string
      valuesData:
        $ref: '#/definitions/service.ValuesDataArgs'
      variable_yaml:
        type: string
      yaml_data:
        $ref: '#/definitions/template.CustomYaml'
    type: object
  service.ProductK8sServiceCreationInfo:
    properties:
      containers:
        items:
          $ref: '#/definitions/models.Container'
        type: array
      deploy_strategy:
        type: string
      env_configs:
        items:
          $ref: '#/definitions/models.EnvConfig'
        type: array
      error:
        type: string
      product_name:
        type: string
      release_name:
        type: string
      render:
        allOf:
        - $ref: '#/definitions/template.ServiceRender'
        description: New since 1.9.0 used to replace service renders in render_set
      resources:
        items:
          $ref: '#/definitions/models.ServiceResource'
        type: array
      revision:
        type: integer
      service_name:
        type: string
      type:
        type: string
      updatable:
        type: boolean
      update_time:
        type: integer
      variable_kvs:
        items:
          $ref: '#/definitions/types.RenderVariableKV'
        type: array
      variable_yaml:
        type: string
    type: object
  service.RawYamlResp:
    properties:
      yamlContent:
        type: string
    type: object
  service.RepoConfig:
    properties:
      branch:
        type: string
      codehostID:
        type: integer
      namespace:
        type: string
      owner:
        type: string
      repo:
        type: string
      valuesPaths:
        items:
          type: string
        type: array
    type: object
  service.ResourceDeployStatus:
    properties:
      name:
        type: string
      override_kvs:
        items:
          $ref: '#/definitions/service.KVPair'
        type: array
      override_yaml:
        type: string
      status:
        $ref: '#/definitions/service.DeployStatus'
      type:
        type: string
    type: object
  service.SearchBizDirByServiceGroup:
    properties:
      group_name:
        type: string
      projects:
        items:
          $ref: '#/definitions/service.SearchBizDirByServiceProject'
        type: array
    type: object
  service.SearchBizDirByServiceProject:
    properties:
      project:
        $ref: '#/definitions/models.ProjectDetail'
      services:
        items:
          type: string
        type: array
    type: object
  service.ServiceDefinition:
    properties:
      auto_sync:
        type: boolean
      service_name:
        type: string
      source:
        type: string
      template_name:
        type: string
      values_yaml:
        type: string
      variable_yaml:
        items:
          $ref: '#/definitions/util.KeyValue'
        type: array
      yaml:
        type: string
    type: object
  service.ServiceDeployStatus:
    properties:
      resources:
        items:
          $ref: '#/definitions/service.ResourceDeployStatus'
        type: array
      service_name:
        type: string
    type: object
  service.ServiceOption:
    properties:
      service:
        $ref: '#/definitions/models.Service'
      service_module:
        items:
          $ref: '#/definitions/github_com_koderover_zadig_pkg_microservice_aslan_core_service_service.ServiceModule'
        type: array
      service_variable_kvs:
        items:
          $ref: '#/definitions/types.ServiceVariableKV'
        type: array
      system_variable:
        items:
          $ref: '#/definitions/github_com_koderover_zadig_pkg_microservice_aslan_core_service_service.Variable'
        type: array
      variable_yaml:
        type: string
      yaml:
        type: string
    type: object
  service.ServiceResp:
    properties:
      deploy_strategy:
        type: string
      env_configs:
        items:
          $ref: '#/definitions/models.EnvConfig'
        type: array
      env_name:
        type: string
      env_statuses:
        items:
          $ref: '#/definitions/models.EnvStatus'
        type: array
      error:
        type: string
      images:
        items:
          type: string
        type: array
      ingress:
        $ref: '#/definitions/service.IngressInfo'
      is_helm_chart_deploy:
        type: boolean
      istio_gateway:
        $ref: '#/definitions/service.IstioGatewayInfo'
      product_name:
        type: string
      ready:
        description: deprecated
        type: string
      release_name:
        type: string
      revision:
        type: integer
      service_display_name:
        type: string
      service_name:
        type: string
      status:
        type: string
      type:
        type: string
      updatable:
        type: boolean
      workLoadType:
        type: string
      zadigx_release_tag:
        type: string
      zadigx_release_type:
        description: |-
          ZadigXReleaseType represents the service contain created by zadigx release workflow
          frontend should limit some operations on these services
        type: string
    type: object
  service.SetIstioGrayscaleConfigRequest:
    properties:
      grayscale_strategy:
        type: string
      header_match_configs:
        items:
          $ref: '#/definitions/models.IstioHeaderMatchConfig'
        type: array
      weight_configs:
        items:
          $ref: '#/definitions/models.IstioWeightConfig'
        type: array
    type: object
  service.SetupPortalServiceRequest:
    properties:
      host:
        type: string
      port_number:
        type: integer
      port_protocol:
        type: string
    type: object
  service.SharedNSEnvs:
    properties:
      env_name:
        type: string
      production:
        type: boolean
      project_name:
        type: string
    type: object
  service.SvcDiffResult:
    properties:
      chart_name:
        type: string
      current:
        $ref: '#/definitions/service.TmplYaml'
      deployed_from_chart:
        type: boolean
      error:
        type: string
      latest:
        $ref: '#/definitions/service.TmplYaml'
      release_name:
        type: string
      service_name:
        type: string
    type: object
  service.SvcResp:
    properties:
      cron_jobs:
        items:
          $ref: '#/definitions/resource.CronJob'
        type: array
      env_name:
        type: string
      group_name:
        type: string
      ingress:
        items:
          $ref: '#/definitions/resource.Ingress'
        type: array
      namespace:
        type: string
      product_name:
        type: string
      scales:
        items:
          $ref: '#/definitions/resource.Workload'
        type: array
      service_endpoints:
        items:
          $ref: '#/definitions/resource.Service'
        type: array
      service_name:
        type: string
    type: object
  service.SvcRevision:
    properties:
      containers:
        items:
          $ref: '#/definitions/models.Container'
        type: array
      current_revision:
        type: integer
      deleted:
        type: boolean
      deploy_strategy:
        type: string
      error:
        type: string
      new:
        type: boolean
      next_revision:
        type: integer
      service_name:
        type: string
      type:
        type: string
      updatable:
        type: boolean
      update_service_tmpl:
        type: boolean
      variable_kvs:
        items:
          $ref: '#/definitions/types.RenderVariableKV'
        type: array
      variable_yaml:
        type: string
    type: object
  service.SyncCollaborationInstanceArgs:
    properties:
      products:
        items:
          $ref: '#/definitions/service.Product'
        type: array
    type: object
  service.TmplYaml:
    properties:
      revision:
        type: integer
      update_by:
        type: string
      yaml:
        type: string
    type: object
  service.UpdateEnv:
    properties:
      env_name:
        type: string
      services:
        items:
          $ref: '#/definitions/service.UpdateServiceArg'
        type: array
    type: object
  service.UpdateMultiHelmProductArg:
    properties:
      chartValues:
        items:
          $ref: '#/definitions/service.HelmSvcRenderArg'
        type: array
      deletedServices:
        items:
          type: string
        type: array
      envNames:
        items:
          type: string
        type: array
      productName:
        type: string
      replacePolicy:
        description: TODO logic not implemented
        type: string
    type: object
  service.UpdateServiceArg:
    properties:
      deploy_strategy:
        type: string
      service_name:
        type: string
      variable_kvs:
        items:
          $ref: '#/definitions/types.RenderVariableKV'
        type: array
    type: object
  service.ValuesDataArgs:
    properties:
      autoSync:
        type: boolean
      gitRepoConfig:
        $ref: '#/definitions/service.RepoConfig'
      source_id:
        type: string
      yamlSource:
        type: string
    type: object
  service.ValuesResp:
    properties:
      valuesYaml:
        type: string
    type: object
  setting.IntegrationLevel:
    enum:
    - system
    - project
    type: string
    x-enum-varnames:
    - IntegrationLevelSystem
    - IntegrationLevelProject
  setting.PMHostStatus:
    enum:
    - normal
    - abnormal
    type: string
    x-enum-varnames:
    - PMHostStatusNormal
    - PMHostStatusAbnormal
  template.CustomYaml:
    properties:
      auto_sync:
        type: boolean
      render_variable_kvs:
        items:
          $ref: '#/definitions/types.RenderVariableKV'
        type: array
      source:
        type: string
      source_detail: {}
      source_id:
        type: string
      yaml_content:
        type: string
    type: object
  template.GitRepoConfig:
    properties:
      branch:
        type: string
      codehost_id:
        type: integer
      namespace:
        description: records the actual namespace of repo, used to generate correct
          project name
        type: string
      owner:
        type: string
      repo:
        type: string
      values_paths:
        items:
          type: string
        type: array
    type: object
  template.RenderKV:
    properties:
      alias:
        type: string
      key:
        type: string
      services:
        items:
          type: string
        type: array
      state:
        type: string
      value:
        type: string
    type: object
  template.ServiceRender:
    properties:
      chart_name:
        type: string
      chart_repo:
        description: '---- for helm services begin ----'
        type: string
      chart_version:
        type: string
      is_helm_chart_deploy:
        type: boolean
      override_values:
        description: used for helm services, json-encoded string of kv value
        type: string
      override_yaml:
        allOf:
        - $ref: '#/definitions/template.CustomYaml'
        description: |-
          OverrideYaml will be used in both helm and k8s projects
          In k8s this is variable_yaml
      release_name:
        type: string
      service_name:
        type: string
      values_yaml:
        type: string
    type: object
  template.YamlDetail:
    properties:
      content:
        type: string
      id:
        type: string
      name:
        type: string
      service_variable_kvs:
        items:
          $ref: '#/definitions/types.ServiceVariableKV'
        type: array
      variable_yaml:
        type: string
    type: object
  template.YamlTemplate:
    properties:
      content:
        type: string
      name:
        type: string
      service_variable_kvs:
        items:
          $ref: '#/definitions/types.ServiceVariableKV'
        type: array
      variable_yaml:
        type: string
    type: object
  types.AuthType:
    enum:
    - SSH
    - PrivateAccessToken
    type: string
    x-enum-varnames:
    - SSHAuthType
    - PrivateAccessTokenAuthType
  types.GlobalVariableKV:
    properties:
      desc:
        type: string
      key:
        type: string
      options:
        items:
          type: string
        type: array
      related_services:
        items:
          type: string
        type: array
      type:
        $ref: '#/definitions/types.ServiceVariableKVType'
      value: {}
    type: object
  types.RenderVariableKV:
    properties:
      desc:
        type: string
      key:
        type: string
      options:
        items:
          type: string
        type: array
      type:
        $ref: '#/definitions/types.ServiceVariableKVType'
      use_global_variable:
        type: boolean
      value: {}
    type: object
  types.ServiceVariableKV:
    properties:
      desc:
        type: string
      key:
        type: string
      options:
        items:
          type: string
        type: array
      type:
        $ref: '#/definitions/types.ServiceVariableKVType'
      value: {}
    type: object
  types.ServiceVariableKVType:
    enum:
    - bool
    - string
    - enum
    - yaml
    type: string
    x-enum-varnames:
    - ServiceVariableKVTypeBoolean
    - ServiceVariableKVTypeString
    - ServiceVariableKVTypeEnum
    - ServiceVariableKVTypeYaml
  types.ServiceWithVariable:
    properties:
      service_name:
        type: string
      variable_kvs:
        items:
          $ref: '#/definitions/types.RenderVariableKV'
        type: array
      variable_yaml:
        type: string
    type: object
  util.KeyValue:
    properties:
      key:
        type: string
      value: {}
    type: object
  workflow.GetHelmValuesDifferenceResp:
    properties:
      current:
        type: string
      latest:
        type: string
    type: object
info:
  contact:
    email: contact@koderover.com
  description: |-
    The API doc is targeting for Zadig developers rather than Zadig users.
    The majority of these APIs are not designed for public use, there is no guarantee on version compatibility.
    Please reach out to contact@koderover.com before you decide to depend on these APIs directly.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Zadig aslan service REST APIs
  version: "1.0"
paths:
  /api/aslan/collaboration/collaborations/sync:
    post:
      consumes:
      - application/json
      description: Sync Collaboration Instance
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.SyncCollaborationInstanceArgs'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Sync Collaboration Instance
      tags:
      - collaboration
  /api/aslan/environment/environments:
    post:
      consumes:
      - application/json
      description: Create Product(environment)
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: type
        in: query
        name: type
        required: true
        type: string
      - description: env type
        in: query
        name: envType
        type: string
      - description: scene
        in: query
        name: scene
        type: string
      - description: is auto
        in: query
        name: auto
        type: boolean
      - description: body
        in: body
        name: body
        required: true
        schema:
          items:
            $ref: '#/definitions/service.CreateSingleProductArg'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Create Product(environment)
      tags:
      - environment
    put:
      consumes:
      - application/json
      description: Update Multi products
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: type
        in: query
        name: type
        type: string
      - description: is force
        in: query
        name: force
        required: true
        type: boolean
      - description: updateMultiK8sEnv body
        in: body
        name: k8s_body
        required: true
        schema:
          items:
            $ref: '#/definitions/service.UpdateEnv'
          type: array
      - description: updateMultiHelmEnv body
        in: body
        name: helm_body
        required: true
        schema:
          $ref: '#/definitions/service.UpdateMultiHelmProductArg'
      - description: updateMultiCvmEnv body
        in: body
        name: pm_body
        required: true
        schema:
          items:
            $ref: '#/definitions/service.UpdateEnv'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update Multi products
      tags:
      - environment
  /api/aslan/environment/environments/{name}:
    delete:
      consumes:
      - application/json
      description: Delete Product
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: is delete
        in: query
        name: is_delete
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete Product
      tags:
      - environment
  /api/aslan/environment/environments/{name}/analysis:
    post:
      consumes:
      - application/json
      description: Run environment Analysis
      parameters:
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.EnvAnalysisRespone'
      summary: Run environment Analysis
      tags:
      - environment
  /api/aslan/environment/environments/{name}/analysis/cron:
    get:
      consumes:
      - application/json
      description: Get Env Analysis Cron
      parameters:
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.EnvAnalysisCronArg'
      summary: Get Env Analysis Cron
      tags:
      - environment
    put:
      consumes:
      - application/json
      description: Upsert Env Analysis Cron
      parameters:
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.EnvAnalysisCronArg'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Upsert Env Analysis Cron
      tags:
      - environment
  /api/aslan/environment/environments/{name}/configs:
    get:
      consumes:
      - application/json
      description: Get environment configs
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: env name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.EnvConfigsArgs'
      summary: Get environment configs
      tags:
      - environment
    put:
      consumes:
      - application/json
      description: Update environment configs
      parameters:
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.EnvConfigsArgs'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update environment configs
      tags:
      - environment
  /api/aslan/environment/environments/{name}/globalVariableCandidates:
    get:
      consumes:
      - application/json
      description: Get global variable candidates
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: env name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.ServiceVariableKV'
            type: array
      summary: Get global variable candidates
      tags:
      - environment
  /api/aslan/environment/environments/{name}/k8s/globalVariables:
    put:
      consumes:
      - application/json
      description: Update global variables
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.updateK8sProductGlobalVariablesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update global variables
      tags:
      - environment
  /api/aslan/environment/environments/{name}/services:
    get:
      consumes:
      - application/json
      description: List services in env
      parameters:
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.EnvServices'
      summary: List services in env
      tags:
      - environment
    put:
      consumes:
      - application/json
      description: Delete services from envrionment
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.DeleteProductServicesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete services
      tags:
      - environment
  /api/aslan/environment/environments/{name}/services/{serviceName}:
    get:
      consumes:
      - application/json
      description: Get Production Service
      parameters:
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: service name or release name
        in: path
        name: serviceName
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: is helm chart deploy
        in: query
        name: isHelmChartDeploy
        required: true
        type: boolean
      - description: workload type
        in: query
        name: workLoadType
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.SvcResp'
      summary: Get Production Service
      tags:
      - environment
    put:
      consumes:
      - application/json
      description: Update service
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: service name
        in: path
        name: serviceName
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.SvcRevision'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update service
      tags:
      - environment
  /api/aslan/environment/environments/{name}/services/{serviceName}/preview:
    post:
      consumes:
      - application/json
      description: Preview service
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: service name
        in: path
        name: serviceName
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.PreviewServiceArgs'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.SvcDiffResult'
      summary: Preview service
      tags:
      - environment
  /api/aslan/environment/environments/{name}/share/portal/{serviceName}:
    get:
      consumes:
      - application/json
      description: Get Portal Service for Share Env
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: service name
        in: path
        name: serviceName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.GetPortalServiceResponse'
      summary: Get Portal Service for Share Env
      tags:
      - environment
    post:
      consumes:
      - application/json
      description: Setup Portal Service for Share Env
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: service name
        in: path
        name: serviceName
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          items:
            $ref: '#/definitions/service.SetupPortalServiceRequest'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Setup Portal Service for Share Env
      tags:
      - environment
  /api/aslan/environment/environments/{name}/sleep:
    post:
      consumes:
      - application/json
      description: Environment Sleep
      parameters:
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: enable or disable
        in: query
        name: action
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Environment Sleep
      tags:
      - environment
  /api/aslan/environment/environments/{name}/sleep/cron:
    get:
      consumes:
      - application/json
      description: Get Env Sleep Cron
      parameters:
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.EnvSleepCronArg'
      summary: Get Env Sleep Cron
      tags:
      - environment
    put:
      consumes:
      - application/json
      description: Upsert Env Sleep Cron
      parameters:
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.EnvSleepCronArg'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Upsert Env Sleep Cron
      tags:
      - environment
  /api/aslan/environment/environments/{name}/version/{serviceName}:
    get:
      consumes:
      - application/json
      description: List Environment Service Versions
      parameters:
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: service name or release name when isHelmChart is true
        in: path
        name: serviceName
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: is helm chart type
        in: query
        name: isHelmChart
        required: true
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.ListEnvServiceVersionsResponse'
            type: array
      summary: List Environment Service Versions
      tags:
      - environment
  /api/aslan/environment/environments/{name}/version/{serviceName}/diff:
    get:
      consumes:
      - application/json
      description: Diff Environment Service Versions
      parameters:
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: service name or release name when isHelmChart is true
        in: path
        name: serviceName
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: revision a
        in: query
        name: revisionA
        required: true
        type: integer
      - description: revision b
        in: query
        name: revisionB
        required: true
        type: integer
      - description: is helm chart type
        in: query
        name: isHelmChart
        required: true
        type: boolean
      - description: release name
        in: query
        name: releaseName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.ListEnvServiceVersionsResponse'
      summary: Diff Environment Service Versions
      tags:
      - environment
  /api/aslan/environment/environments/{name}/version/{serviceName}/revision/{revision}:
    get:
      consumes:
      - application/json
      description: Get Environment Service Version Yaml
      parameters:
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: service name or release name when isHelmChart is true
        in: path
        name: serviceName
        required: true
        type: string
      - description: revision
        in: path
        name: revision
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: is helm chart type
        in: query
        name: isHelmChart
        required: true
        type: boolean
      - description: release name
        in: query
        name: releaseName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.GetEnvServiceVersionYamlResponse'
            type: array
      summary: Get Environment Service Version Yaml
      tags:
      - environment
  /api/aslan/environment/environments/{name}/version/{serviceName}/rollback:
    post:
      consumes:
      - application/json
      description: Rollback Environment Service Version
      parameters:
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: service name or release name when isHelmChart is true
        in: path
        name: serviceName
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: revision
        in: query
        name: revision
        required: true
        type: integer
      - description: is helm chart type
        in: query
        name: isHelmChart
        required: true
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Rollback Environment Service Version
      tags:
      - environment
  /api/aslan/environment/init_info/{name}:
    get:
      consumes:
      - application/json
      description: Get init product
      parameters:
      - description: project template name
        in: path
        name: name
        required: true
        type: string
      - description: env type
        in: query
        name: envType
        required: true
        type: string
      - description: is base env
        in: query
        name: isBaseEnv
        required: true
        type: string
      - description: base env
        in: query
        name: baseEnv
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.getInitProductResponse'
      summary: Get init product
      tags:
      - environment
  /api/aslan/environment/kube/helm/releaseInstances:
    post:
      consumes:
      - application/json
      description: Get Release Instance Deploy Status
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.HelmDeployStatusCheckRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.GetReleaseInstanceDeployStatusResponse'
            type: array
      summary: Get Release Instance Deploy Status
      tags:
      - environment
  /api/aslan/environment/kube/k8s/resources:
    post:
      consumes:
      - application/json
      description: Get Resource Deploy Status
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.K8sDeployStatusCheckRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.ServiceDeployStatus'
            type: array
      summary: Get Resource Deploy Status
      tags:
      - environment
  /api/aslan/environment/kube/pods:
    get:
      consumes:
      - application/json
      description: Get Pods Info
      parameters:
      - description: projectName
        in: query
        name: projectName
        required: true
        type: string
      - description: envName
        in: query
        name: envName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.ListPodsInfoRespone'
            type: array
      summary: Get Pods Info
      tags:
      - environment
  /api/aslan/environment/kube/pods/{podName}:
    get:
      consumes:
      - application/json
      description: Get Pods Detail Info
      parameters:
      - description: projectName
        in: query
        name: projectName
        required: true
        type: string
      - description: envName
        in: query
        name: envName
        required: true
        type: string
      - description: podName
        in: path
        name: podName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resource.Pod'
      summary: Get Pods Detail Info
      tags:
      - environment
  /api/aslan/environment/production/environments:
    put:
      consumes:
      - application/json
      description: Update Multi production products
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: type
        in: query
        name: type
        type: string
      - description: is force
        in: query
        name: force
        required: true
        type: boolean
      - description: updateMultiK8sEnv body
        in: body
        name: k8s_body
        required: true
        schema:
          items:
            $ref: '#/definitions/service.UpdateEnv'
          type: array
      - description: updateMultiHelmEnv body
        in: body
        name: helm_body
        required: true
        schema:
          $ref: '#/definitions/service.UpdateMultiHelmProductArg'
      - description: updateMultiHelmChartEnv body
        in: body
        name: helm_chart_body
        required: true
        schema:
          $ref: '#/definitions/service.UpdateMultiHelmProductArg'
      - description: updateMultiCvmEnv body
        in: body
        name: pm_body
        required: true
        schema:
          items:
            $ref: '#/definitions/service.UpdateEnv'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update Multi production products
      tags:
      - environment
  /api/aslan/environment/production/environments/:name/helm/releases:
    delete:
      consumes:
      - application/json
      description: Delete production helm release from envrionment
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: release names
        in: query
        name: releaseNames
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete production helm release from envrionment
      tags:
      - environment
  /api/aslan/environment/production/environments/{name}:
    get:
      consumes:
      - application/json
      description: Get Product
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: env name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_koderover_zadig_pkg_microservice_aslan_core_environment_service.ProductResp'
      summary: Get Product
      tags:
      - environment
  /api/aslan/environment/production/environments/{name}/analysis:
    post:
      consumes:
      - application/json
      description: Run Production environment Analysis
      parameters:
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.EnvAnalysisRespone'
      summary: Run Production environment Analysis
      tags:
      - environment
  /api/aslan/environment/production/environments/{name}/analysis/cron:
    get:
      consumes:
      - application/json
      description: Get Production Env Analysis Cron
      parameters:
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.EnvAnalysisCronArg'
      summary: Get Production Env Analysis Cron
      tags:
      - environment
    put:
      consumes:
      - application/json
      description: Upsert Production Env Analysis Cron
      parameters:
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.EnvAnalysisCronArg'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Upsert Production Env Analysis Cron
      tags:
      - environment
  /api/aslan/environment/production/environments/{name}/check/istioGrayscale/{op}/ready:
    get:
      consumes:
      - application/json
      description: Check Istio Grayscale Ready
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: operation
        in: path
        name: op
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.IstioGrayscaleReady'
      summary: Check Istio Grayscale Ready
      tags:
      - environment
  /api/aslan/environment/production/environments/{name}/check/workloads/k8services:
    get:
      consumes:
      - application/json
      description: Check Production Workloads K8sServices
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: env name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      summary: Check Production Workloads K8sServices
      tags:
      - environment
  /api/aslan/environment/production/environments/{name}/configs:
    get:
      consumes:
      - application/json
      description: Get production environment configs
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: env name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.EnvConfigsArgs'
      summary: Get production environment configs
      tags:
      - environment
    put:
      consumes:
      - application/json
      description: Update production environment configs
      parameters:
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.EnvConfigsArgs'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update production environment configs
      tags:
      - environment
  /api/aslan/environment/production/environments/{name}/estimated-values:
    post:
      consumes:
      - application/json
      description: Get Production Estimated Values
      parameters:
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: service name or release name
        in: query
        name: serviceName
        required: true
        type: string
      - description: is helm chart deploy
        in: query
        name: isHelmChartDeploy
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.EstimateValuesArg'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.RawYamlResp'
      summary: Get Production Estimated Values
      tags:
      - environment
  /api/aslan/environment/production/environments/{name}/helm/charts:
    put:
      consumes:
      - application/json
      description: Update helm product charts
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.EnvRendersetArg'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update helm product charts
      tags:
      - environment
  /api/aslan/environment/production/environments/{name}/helm/values:
    get:
      consumes:
      - application/json
      description: Get Production Chart Values
      parameters:
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: service name
        in: query
        name: serviceName
        type: string
      - description: release name
        in: query
        name: releaseName
        type: string
      - description: isHelmChartDeploy
        in: query
        name: isHelmChartDeploy
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.SyncCollaborationInstanceArgs'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.ValuesResp'
      summary: Get Production Chart Values
      tags:
      - environment
  /api/aslan/environment/production/environments/{name}/istioGrayscale/config:
    get:
      consumes:
      - application/json
      description: Get Istio Grayscale Config
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: env name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.IstioGrayscale'
      summary: Get Istio Grayscale Config
      tags:
      - environment
    post:
      consumes:
      - application/json
      description: Set Istio Grayscale Config
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.SetIstioGrayscaleConfigRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Set Istio Grayscale Config
      tags:
      - environment
  /api/aslan/environment/production/environments/{name}/istioGrayscale/enable:
    delete:
      consumes:
      - application/json
      description: Disable Istio Grayscale
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: env name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Disable Istio Grayscale
      tags:
      - environment
    post:
      consumes:
      - application/json
      description: Enable Istio Grayscale
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: env name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Enable Istio Grayscale
      tags:
      - environment
  /api/aslan/environment/production/environments/{name}/istioGrayscale/portal/{serviceName}:
    get:
      consumes:
      - application/json
      description: Get Portal Service for Istio Grayscale
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: service name
        in: path
        name: serviceName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.GetPortalServiceResponse'
      summary: Get Portal Service for Istio Grayscale
      tags:
      - environment
    post:
      consumes:
      - application/json
      description: Setup Portal Service for Istio Grayscale
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: service name
        in: path
        name: serviceName
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          items:
            $ref: '#/definitions/service.SetupPortalServiceRequest'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Setup Portal Service for Istio Grayscale
      tags:
      - environment
  /api/aslan/environment/production/environments/{name}/sleep:
    post:
      consumes:
      - application/json
      description: Production Environment Sleep
      parameters:
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: enable or disable
        in: query
        name: action
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Production Environment Sleep
      tags:
      - environment
  /api/aslan/environment/production/environments/{name}/sleep/cron:
    get:
      consumes:
      - application/json
      description: Get Production Env Sleep Cron
      parameters:
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.EnvSleepCronArg'
      summary: Get Production Env Sleep Cron
      tags:
      - environment
    put:
      consumes:
      - application/json
      description: Upsert Production Env Sleep Cron
      parameters:
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.EnvSleepCronArg'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Upsert Production Env Sleep Cron
      tags:
      - environment
  /api/aslan/environment/production/environments/{name}/version/{serviceName}:
    get:
      consumes:
      - application/json
      description: List Production Environment Service Versions
      parameters:
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: service name or release name when isHelmChart is true
        in: path
        name: serviceName
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: is helm chart type
        in: query
        name: isHelmChart
        required: true
        type: boolean
      - description: release name
        in: query
        name: releaseName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.ListEnvServiceVersionsResponse'
            type: array
      summary: List Production Environment Service Versions
      tags:
      - environment
  /api/aslan/environment/production/environments/{name}/version/{serviceName}/diff:
    get:
      consumes:
      - application/json
      description: Diff Production Environment Service Versions
      parameters:
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: service name or release name when isHelmChart is true
        in: path
        name: serviceName
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: revision a
        in: query
        name: revisionA
        required: true
        type: integer
      - description: revision b
        in: query
        name: revisionB
        required: true
        type: integer
      - description: is helm chart type
        in: query
        name: isHelmChart
        required: true
        type: boolean
      - description: release name
        in: query
        name: releaseName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.ListEnvServiceVersionsResponse'
      summary: Diff Production Environment Service Versions
      tags:
      - environment
  /api/aslan/environment/production/environments/{name}/version/{serviceName}/revision/{revision}:
    get:
      consumes:
      - application/json
      description: Get Production Environment Service Version Yaml
      parameters:
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: service name or release name when isHelmChart is true
        in: path
        name: serviceName
        required: true
        type: string
      - description: revision
        in: path
        name: revision
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: is helm chart type
        in: query
        name: isHelmChart
        required: true
        type: boolean
      - description: release name
        in: query
        name: releaseName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.GetEnvServiceVersionYamlResponse'
            type: array
      summary: Get Production Environment Service Version Yaml
      tags:
      - environment
  /api/aslan/environment/production/environments/{name}/version/{serviceName}/rollback:
    post:
      consumes:
      - application/json
      description: Rollback Production Environment Service Version
      parameters:
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: service name or release name when isHelmChart is true
        in: path
        name: serviceName
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: revision
        in: query
        name: revision
        required: true
        type: integer
      - description: is helm chart type
        in: query
        name: isHelmChart
        required: true
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Rollback Production Environment Service Version
      tags:
      - environment
  /api/aslan/environment/production/environments/{name}/workloads:
    get:
      consumes:
      - application/json
      description: List Workloads In Env
      parameters:
      - description: env name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.ServiceResp'
            type: array
      summary: List Workloads In Env
      tags:
      - environment
  /api/aslan/environment/production/rendersets/renderchart:
    post:
      consumes:
      - application/json
      description: Get service render charts
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: env name
        in: query
        name: envName
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.GetSvcRenderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.HelmSvcRenderArg'
            type: array
      summary: Get Service render charts
      tags:
      - environment
  /api/aslan/environment/rendersets/globalVariables:
    get:
      consumes:
      - application/json
      description: Get global variable from environment, current only used for k8s
        project
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: env name
        in: query
        name: envName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.getGlobalVariablesRespone'
      summary: Get global variable
      tags:
      - environment
  /api/aslan/environment/rendersets/variables:
    get:
      consumes:
      - application/json
      description: Get service variables
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: env name
        in: query
        name: envName
        type: string
      - description: service name
        in: query
        name: serviceName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.K8sSvcRenderArg'
            type: array
      summary: Get service variables
      tags:
      - environment
  /api/aslan/environments/{name}/services/{serviceName}/variables:
    get:
      consumes:
      - application/json
      description: Get production service variables
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: env name
        in: path
        name: name
        required: true
        type: string
      - description: service name
        in: path
        name: serviceName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.K8sSvcRenderArg'
            type: array
      summary: Get production service variables
      tags:
      - environment
  /api/aslan/placeholder/deploy_job_spec:
    post:
      consumes:
      - application/json
      description: '[DONT USE] ZadigDeployJobSpec'
      parameters:
      - description: body
        in: body
        name: deploy_job_spec
        required: true
        schema:
          $ref: '#/definitions/models.ZadigDeployJobSpec'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: '[DONT USE]  ZadigDeployJobSpec'
      tags:
      - placeholder
  /api/aslan/project/bizdir:
    get:
      consumes:
      - application/json
      description: Get Bussiness Directory
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.GroupDetail'
            type: array
      summary: Get Bussiness Directory
      tags:
      - project
  /api/aslan/project/bizdir/search/project:
    get:
      consumes:
      - application/json
      description: Bussiness Directory Search By Project
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.GroupDetail'
            type: array
      summary: Bussiness Directory Search By Project
      tags:
      - project
  /api/aslan/project/bizdir/search/service:
    get:
      consumes:
      - application/json
      description: Bussiness Directory Search By Service
      parameters:
      - description: service name
        in: query
        name: serviceName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.SearchBizDirByServiceGroup'
            type: array
      summary: Bussiness Directory Search By Service
      tags:
      - project
  /api/aslan/project/bizdir/service/detail:
    get:
      consumes:
      - application/json
      description: Get Bussiness Directory Searvice Detail
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: service name
        in: query
        name: serviceName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.GetBizDirServiceDetailResponse'
            type: array
      summary: Get Bussiness Directory Searvice Detail
      tags:
      - project
  /api/aslan/project/bizdir/services:
    get:
      consumes:
      - application/json
      description: Get Bussiness Directory Project Services
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      summary: Get Bussiness Directory Project Services
      tags:
      - project
  /api/aslan/project/integration/{name}/codehosts:
    get:
      consumes:
      - application/json
      description: List Project CodeHost
      parameters:
      - description: project name
        in: path
        name: name
        required: true
        type: string
      - description: encrypted key
        in: query
        name: encryptedKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CodeHost'
            type: array
      summary: List Project CodeHost
      tags:
      - project
    post:
      consumes:
      - application/json
      description: Create Project CodeHost
      parameters:
      - description: project name
        in: path
        name: name
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CodeHost'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Create Project CodeHost
      tags:
      - project
  /api/aslan/project/integration/{name}/codehosts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Project CodeHost
      parameters:
      - description: project name
        in: path
        name: name
        required: true
        type: string
      - description: code host id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete Project CodeHost
      tags:
      - project
    get:
      consumes:
      - application/json
      description: Get Project CodeHost
      parameters:
      - description: project name
        in: path
        name: name
        required: true
        type: string
      - description: code host id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CodeHost'
      summary: Get Project CodeHost
      tags:
      - project
    patch:
      consumes:
      - application/json
      description: Update Project CodeHost
      parameters:
      - description: project name
        in: path
        name: name
        required: true
        type: string
      - description: code host id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CodeHost'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update Project CodeHost
      tags:
      - project
  /api/aslan/project/integration/{name}/codehosts/available:
    get:
      consumes:
      - application/json
      description: List Available CodeHost
      parameters:
      - description: project name
        in: path
        name: name
        required: true
        type: string
      - description: encrypted key
        in: query
        name: encryptedKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CodeHost'
            type: array
      summary: List Available CodeHost
      tags:
      - project
  /api/aslan/project/products/{name}/globalProductionGlobalVariables:
    get:
      consumes:
      - application/json
      description: Get global variable candidates
      parameters:
      - description: project name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.GetGlobalVariableCandidatesRespone'
            type: array
      summary: Get production_global variable candidates
      tags:
      - project
  /api/aslan/project/products/{name}/globalVariableCandidates:
    get:
      consumes:
      - application/json
      description: Get global variable candidates
      parameters:
      - description: project name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.GetGlobalVariableCandidatesRespone'
            type: array
      summary: Get global variable candidates
      tags:
      - project
  /api/aslan/project/products/{name}/globalVariables:
    get:
      consumes:
      - application/json
      description: Get global variables
      parameters:
      - description: project name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.ServiceVariableKV'
            type: array
      summary: Get global variables
      tags:
      - project
    put:
      consumes:
      - application/json
      description: Update global variables
      parameters:
      - description: project name
        in: path
        name: name
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.updateGlobalVariablesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update global variables
      tags:
      - project
  /api/aslan/project/products/{name}/productionGlobalVariables:
    get:
      consumes:
      - application/json
      description: Get global variables
      parameters:
      - description: project name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.ServiceVariableKV'
            type: array
      summary: Get global production_variables
      tags:
      - project
    put:
      consumes:
      - application/json
      description: Update global variables
      parameters:
      - description: project name
        in: path
        name: name
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.updateGlobalVariablesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update production_global variables
      tags:
      - project
  /api/aslan/service/production/version/{serviceName}:
    get:
      consumes:
      - application/json
      description: List Production Service Versions
      parameters:
      - description: service name
        in: path
        name: serviceName
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.ListServiceVersionsResponse'
            type: array
      summary: List Production Service Versions
      tags:
      - service
  /api/aslan/service/production/version/{serviceName}/diff:
    get:
      consumes:
      - application/json
      description: Diff Production Service Versions
      parameters:
      - description: service name
        in: path
        name: serviceName
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: revision a
        in: query
        name: revisionA
        required: true
        type: integer
      - description: revision b
        in: query
        name: revisionB
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.ListServiceVersionsResponse'
      summary: Diff Production Service Versions
      tags:
      - service
  /api/aslan/service/production/version/{serviceName}/revision/{revision}:
    get:
      consumes:
      - application/json
      description: Get Production Service Versions Yaml
      parameters:
      - description: service name
        in: path
        name: serviceName
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: revision
        in: path
        name: revision
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.GetServiceVersionYamlResponse'
      summary: Get Production Service Version Yaml
      tags:
      - service
  /api/aslan/service/production/version/{serviceName}/rollback:
    post:
      consumes:
      - application/json
      description: Rollback Production SService Version
      parameters:
      - description: service name
        in: path
        name: serviceName
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: revision
        in: query
        name: revision
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Rollback Production Service Version
      tags:
      - service
  /api/aslan/service/services:
    post:
      consumes:
      - application/json
      description: Create service template
      parameters:
      - description: is force to create service template
        in: query
        name: force
        required: true
        type: boolean
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.createServiceTemplateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.ServiceOption'
      summary: Create service template
      tags:
      - service
  /api/aslan/service/services/{name}/environments/deployable:
    get:
      consumes:
      - application/json
      description: Get Deployable Envs
      parameters:
      - description: service name
        in: path
        name: name
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.DeployableEnvResp'
      summary: Get Deployable Envs
      tags:
      - service
  /api/aslan/service/services/{name}/variable:
    put:
      consumes:
      - application/json
      description: Update service varaible
      parameters:
      - description: service name
        in: path
        name: name
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.updateServiceVariableRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update service varaible
      tags:
      - service
  /api/aslan/service/services/variable/convert:
    post:
      consumes:
      - application/json
      description: convert varaible kv and yaml
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.ConvertVaraibleKVAndYamlArgs'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.ConvertVaraibleKVAndYamlArgs'
      summary: convert varaible kv and yaml
      tags:
      - service
  /api/aslan/service/template/load:
    post:
      consumes:
      - application/json
      description: Load service from yaml template
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.LoadServiceFromYamlTemplateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Load service from yaml template
      tags:
      - service
  /api/aslan/service/template/reload:
    post:
      consumes:
      - application/json
      description: Reload service from yaml template
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.LoadServiceFromYamlTemplateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Reload service from yaml template
      tags:
      - service
  /api/aslan/service/version/{serviceName}:
    get:
      consumes:
      - application/json
      description: List Service Versions
      parameters:
      - description: service name
        in: path
        name: serviceName
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.ListServiceVersionsResponse'
            type: array
      summary: List Service Versions
      tags:
      - service
  /api/aslan/service/version/{serviceName}/diff:
    get:
      consumes:
      - application/json
      description: Diff Service Versions
      parameters:
      - description: service name
        in: path
        name: serviceName
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: revision a
        in: query
        name: revisionA
        required: true
        type: integer
      - description: revision b
        in: query
        name: revisionB
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.ListServiceVersionsResponse'
      summary: Diff Service Versions
      tags:
      - service
  /api/aslan/service/version/{serviceName}/revision/{revision}:
    get:
      consumes:
      - application/json
      description: Get Service Versions Yaml
      parameters:
      - description: service name
        in: path
        name: serviceName
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: revision
        in: path
        name: revision
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.GetServiceVersionYamlResponse'
      summary: Get Service Version Yaml
      tags:
      - service
  /api/aslan/service/version/{serviceName}/rollback:
    post:
      consumes:
      - application/json
      description: Rollback Service Version
      parameters:
      - description: service name
        in: path
        name: serviceName
        required: true
        type: string
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      - description: revision
        in: query
        name: revision
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Rollback Service Version
      tags:
      - service
  /api/aslan/system/dbinstance/project:
    get:
      consumes:
      - application/json
      description: List DB Instances Info By Project
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.DBInstance'
            type: array
      summary: List DB Instances Info By Project
      tags:
      - system
  /api/aslan/system/helm/project:
    get:
      consumes:
      - application/json
      description: List Helm Repos By Project
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.HelmRepo'
            type: array
      summary: List Helm Repos By Project
      tags:
      - system
  /api/aslan/system/llm/integration:
    get:
      consumes:
      - application/json
      description: List llm integrations
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.LLMIntegration'
            type: array
      summary: List llm integrations
      tags:
      - system
    post:
      consumes:
      - application/json
      description: Create a llm integration
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.CreateLLMIntegrationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Create a llm integration
      tags:
      - system
  /api/aslan/system/llm/integration/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a llm integration
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete a llm integration
      tags:
      - system
    get:
      consumes:
      - application/json
      description: Get a llm integration
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LLMIntegration'
      summary: Get a llm integration
      tags:
      - system
    put:
      consumes:
      - application/json
      description: Update a llm integration
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.CreateLLMIntegrationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update a llm integration
      tags:
      - system
  /api/aslan/system/llm/integration/check:
    get:
      consumes:
      - application/json
      description: Check llm integrations
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.checkLLMIntegrationResponse'
      summary: Check llm integrations
      tags:
      - system
  /api/aslan/system/meego/{id}/projects:
    get:
      consumes:
      - application/json
      description: List Meego Projects
      parameters:
      - description: meego id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.MeegoProjectResp'
      summary: List Meego Projects
      tags:
      - system
  /api/aslan/system/meego/{id}/projects/{projectID}/work_item:
    get:
      consumes:
      - application/json
      description: List Meego Work Items
      parameters:
      - description: meego id
        in: path
        name: id
        required: true
        type: string
      - description: project id
        in: path
        name: projectID
        required: true
        type: string
      - description: type key
        in: query
        name: type_key
        required: true
        type: string
      - description: page num
        in: query
        name: page_num
        required: true
        type: string
      - description: page size
        in: query
        name: page_size
        required: true
        type: string
      - description: item name
        in: query
        name: item_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.MeegoWorkItemResp'
      summary: List Meego Work Items
      tags:
      - system
  /api/aslan/system/meego/{id}/projects/{projectID}/work_item/types:
    get:
      consumes:
      - application/json
      description: Get Meego Work Item Type List
      parameters:
      - description: meego id
        in: path
        name: id
        required: true
        type: string
      - description: project id
        in: path
        name: projectID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.MeegoWorkItemTypeResp'
      summary: Get Meego Work Item Type List
      tags:
      - system
  /api/aslan/system/project_management/{id}/jira/project:
    get:
      consumes:
      - application/json
      description: List Jira Projects
      parameters:
      - description: jira id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.JiraProjectsResp'
            type: array
      summary: List Jira Projects
      tags:
      - system
  /api/aslan/system/project_management/project:
    get:
      consumes:
      - application/json
      description: List Project Management For Project
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ProjectManagement'
            type: array
      summary: List Project Management For Project
      tags:
      - system
  /api/aslan/system/registry/project:
    get:
      consumes:
      - application/json
      description: List Registries
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.RegistryNamespace'
            type: array
      summary: List Registries
      tags:
      - system
  /api/aslan/system/s3storage/project:
    get:
      consumes:
      - application/json
      description: List S3 Storage By Project
      parameters:
      - description: project name
        in: query
        name: projectName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.S3Storage'
            type: array
      summary: List S3 Storage By Project
      tags:
      - system
  /api/aslan/system/webhook/config:
    get:
      consumes:
      - application/json
      description: Get webhook config
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.GetWebhookConfigReponse'
      summary: Get webhook config
      tags:
      - system
  /api/aslan/template/yaml:
    post:
      consumes:
      - application/json
      description: Create yaml template
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/template.YamlTemplate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Create yaml template
      tags:
      - template
  /api/aslan/template/yaml/{id}:
    get:
      consumes:
      - application/json
      description: Get yaml template detail
      parameters:
      - description: template id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/template.YamlDetail'
      summary: Get yaml template detail
      tags:
      - template
    put:
      consumes:
      - application/json
      description: Update yaml template
      parameters:
      - description: template id
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/template.YamlTemplate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update yaml template
      tags:
      - template
  /api/aslan/template/yaml/{id}/variable:
    put:
      consumes:
      - application/json
      description: Update yaml template variable
      parameters:
      - description: template id
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/template.YamlTemplate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update yaml template variable
      tags:
      - template
  /api/aslan/template/yaml/validateVariable:
    post:
      consumes:
      - application/json
      description: Validate template varaibles
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.getYamlTemplateVariablesReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Validate template varaibles
      tags:
      - service
  /api/aslan/workflow/v4/filterEnv:
    post:
      consumes:
      - application/json
      description: Get filtered env services
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.filterDeployServiceVarsQuery'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.DeployService'
            type: array
      summary: Get filtered env services
      tags:
      - workflow
  /api/aslan/workflow/v4/yamlComparison:
    post:
      consumes:
      - application/json
      description: Compare Helm Service Yaml In Env
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.getHelmValuesDifferenceReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/workflow.GetHelmValuesDifferenceResp'
      summary: Compare Helm Service Yaml In Env
      tags:
      - workflow
  /openapi/projects/project/init/yaml:
    post:
      consumes:
      - application/json
      description: OpenAPI Initialize Yaml Project
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.OpenAPIInitializeProjectReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: OpenAPI Initialize Yaml Project
      tags:
      - OpenAPI
swagger: "2.0"
